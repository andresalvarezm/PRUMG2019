--------------------------------------------------------
--  DDL for Sequence SEQ_IDCANAL
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDCANAL  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDCLIENTE
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDCLIENTE  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDCOLONIA
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDCOLONIA  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDDEPARTAMENTO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDDEPARTAMENTO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDDIRECCION
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDDIRECCION  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDEMPLEADO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDEMPLEADO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDESPECIALIDADES
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDESPECIALIDADES  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDESTADO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDESTADO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDMUNICIPIO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDMUNICIPIO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDPAIS
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDPAIS  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDPERSONA
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDPERSONA  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDPRODUCTO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDPRODUCTO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDPROMO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDPROMO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDSUCURSAL
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDSUCURSAL  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDUSUARIO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDUSUARIO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDVENTA
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDVENTA  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDZONA
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_IDZONA  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_NOFACTURA
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_NOFACTURA  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_NO_PAGO
--------------------------------------------------------

   CREATE SEQUENCE  SEQ_NO_PAGO  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table BITACORA
--------------------------------------------------------

  CREATE TABLE BITACORA 
   (	FECHA DATE, 
	USUARIO VARCHAR2(50 BYTE), 
	NOMBRETABLA VARCHAR2(50 BYTE), 
	LLAVE VARCHAR2(30 BYTE), 
	NOMBRECAMPO VARCHAR2(50 BYTE), 
	VALORANTERIOR VARCHAR2(200 BYTE), 
	VALORNUEVO VARCHAR2(200 BYTE), 
	OBSERVACIONES VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table CANAL
--------------------------------------------------------

  CREATE TABLE CANAL 
   (	IDCANAL NUMBER(14,0), 
	NOMBRECANAL VARCHAR2(255 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;

   COMMENT ON TABLE CANAL  IS 'CANAL_DE_SOLICITUD';
--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------

  CREATE TABLE CLIENTE 
   (	IDCLIENTE NUMBER(14,0), 
	IDPERSONA NUMBER(14,0), 
	IDESTADO NUMBER(14,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table COLONIA
--------------------------------------------------------

  CREATE TABLE COLONIA 
   (	IDCOLONIA NUMBER(14,0), 
	IDMUNICIPIO NUMBER(14,0), 
	COLONIA VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table DEPARTAMENTO
--------------------------------------------------------

  CREATE TABLE DEPARTAMENTO 
   (	IDDEPARTAMENTO NUMBER(14,0), 
	IDPAIS NUMBER(14,0), 
	DEPARTAMENTO VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table DIRECCION
--------------------------------------------------------

  CREATE TABLE DIRECCION 
   (	IDDIRECCION NUMBER(14,0), 
	IDZONA NUMBER(14,0), 
	IDCOLONIA NUMBER(14,0), 
	IDMUNICIPIO NUMBER(14,0), 
	CALLE_AVENIDA VARCHAR2(50 BYTE), 
	NUMERO VARCHAR2(50 BYTE), 
	EDIFICIO VARCHAR2(50 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table DIRECCION_PERSONA
--------------------------------------------------------

  CREATE TABLE DIRECCION_PERSONA 
   (	IDPERSONA NUMBER(14,0), 
	IDDIRECCION NUMBER(14,0), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table EMPLEADO
--------------------------------------------------------

  CREATE TABLE EMPLEADO 
   (	FECHAINGRESO DATE, 
	IDEMPLEADO NUMBER(14,0), 
	IDPERSONA NUMBER(14,0), 
	IDESTADO NUMBER(5,0), 
	IDESPECIALIDADES NUMBER(14,0), 
	FECHASALIDA DATE, 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table ESPECIALIDADES
--------------------------------------------------------

  CREATE TABLE ESPECIALIDADES 
   (	IDESPECIALIDADES NUMBER(14,0), 
	ESPECIALIDADES VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table ESTADO
--------------------------------------------------------

  CREATE TABLE ESTADO 
   (	IDESTADO NUMBER(14,0), 
	ESTADO VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table FACTURA
--------------------------------------------------------

  CREATE TABLE FACTURA 
   (	NOFACTURA NUMBER(14,0), 
	IDVENTA NUMBER(14,0), 
	NO_PAGO NUMBER(14,0), 
	FECHA DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table MODO_PAGO
--------------------------------------------------------

  CREATE TABLE MODO_PAGO 
   (	NO_PAGO NUMBER(14,0), 
	NOMBRE VARCHAR2(50 BYTE), 
	OTRODETALLE VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table MUNICIPIO
--------------------------------------------------------

  CREATE TABLE MUNICIPIO 
   (	IDMUNICIPIO NUMBER(14,0), 
	IDDEPARTAMENTO NUMBER(14,0), 
	IDPAIS NUMBER(14,0), 
	MUNICIPIO VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table PAIS
--------------------------------------------------------

  CREATE TABLE PAIS 
   (	IDPAIS NUMBER(14,0), 
	PAIS VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table PERSONA
--------------------------------------------------------

  CREATE TABLE PERSONA 
   (	IDPERSONA NUMBER(14,0), 
	NOMBRE1 VARCHAR2(60 BYTE), 
	NOMBRE2 VARCHAR2(60 BYTE), 
	NOMBRE3 VARCHAR2(60 BYTE), 
	APELLIDO1 VARCHAR2(60 BYTE), 
	APELLIDO2 VARCHAR2(60 BYTE), 
	APECASADA VARCHAR2(60 BYTE), 
	FECHA_NACIMIENTO DATE, 
	GENERO VARCHAR2(20 BYTE), 
	TELEFONO NUMBER(8,0), 
	EMAIL VARCHAR2(60 BYTE), 
	ESTADOCIVIL VARCHAR2(20 BYTE), 
	DPI VARCHAR2(20 BYTE), 
	NIT VARCHAR2(20 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table PRODUCTO
--------------------------------------------------------

  CREATE TABLE PRODUCTO 
   (	IDPRODUCTO NUMBER(14,0), 
	NOMBREPRODUCTO VARCHAR2(50 BYTE), 
	STOCK NUMBER(14,0), 
	DESCRIPCION VARCHAR2(200 BYTE), 
	SKU VARCHAR2(30 BYTE), 
	UNIDAD VARCHAR2(20 BYTE), 
	PRECIOUNIDAD NUMBER(14,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table PROMOCION
--------------------------------------------------------

  CREATE TABLE PROMOCION 
   (	IDPROMO NUMBER(14,0), 
	NOMBREPROMO VARCHAR2(100 BYTE), 
	CODIGO VARCHAR2(10 BYTE), 
	FECHAINICIO DATE, 
	FECHAFIN DATE, 
	PORCEPROMO VARCHAR2(50 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table SUCURSAL
--------------------------------------------------------

  CREATE TABLE SUCURSAL 
   (	IDSUCURSAL NUMBER(14,0), 
	SUCURSAL VARCHAR2(100 BYTE), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table USUARIO
--------------------------------------------------------

  CREATE TABLE USUARIO 
   (	IDUSUARIO NUMBER(14,0), 
	IDEMPLEADO NUMBER(14,0), 
	IDSUCURSAL NUMBER(14,0), 
	USUARIO VARCHAR2(50 BYTE), 
	PW VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table VENTA
--------------------------------------------------------

  CREATE TABLE VENTA 
   (	IDVENTA NUMBER(14,0), 
	IDPRODUCTO NUMBER(14,0), 
	IDPROMO NUMBER(14,0), 
	IDCANAL NUMBER(14,0), 
	IDCLIENTE NUMBER(14,0), 
	FECHAVENTA DATE, 
	CANTIDAD NUMBER(14,0), 
	PRECIOUNIDAD NUMBER(14,2), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(50 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Table ZONA
--------------------------------------------------------

  CREATE TABLE ZONA 
   (	IDZONA NUMBER(14,0), 
	IDMUNICIPIO NUMBER(14,0), 
	ZONA NUMBER(5,0), 
	CREADO DATE, 
	CREADO_POR VARCHAR2(100 BYTE), 
	ACTUALIZADO DATE, 
	ACTUALIZADO_POR VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
REM INSERTING into EJE.BITACORA
SET DEFINE OFF;
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','NOMBREPRODUCTO','LATEX ULTIMATE',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','STOCK','145',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','DESCRIPCION','PINTURA LÁTEX 100% ACRÍLICA BASE AGUA',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','SKU','LUB0000001',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','UNIDAD','400',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','1','PRECIOUNIDAD','200',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','FECHAINGRESO','01/11/18','01/01/18',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDPERSONA','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDESTADO','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDESPECIALIDADES','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','FECHASALIDA',null,null,null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','FECHAINGRESO','01/01/18','01/02/18',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDPERSONA','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDESTADO','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','IDESPECIALIDADES','1','1',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','EMPLEADO','1','FECHASALIDA',null,null,null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','IDPRODUCTO','145','146','NO HAY SUFICIENTE PRODUCTO PARA LA VENTA 21');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','IDPRODUCTO','21',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','IDPROMO',null,null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','IDCANAL','1',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','IDCLIENTE','1',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','FECHAVENTA','24/11/19',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','CANTIDAD','145',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','VENTA','2','PRECIOUNIDAD','200',null,'VALOR ELIMINADO');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','IDPRODUCTO','145','146','NO HAY SUFICIENTE PRODUCTO PARA LA VENTA 21');
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','NOMBREPRODUCTO','LATEX ULTIMATE','LATEX ULTIMATE',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','STOCK','145','5',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','DESCRIPCION','PINTURA LÁTEX 100% ACRÍLICA BASE AGUA','PINTURA LÁTEX 100% ACRÍLICA BASE AGUA',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','SKU','LUB0000001','LUB0000001',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','UNIDAD','400','400',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','PRECIOUNIDAD','200','200',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','NOMBREPRODUCTO','LATEX ULTIMATE','LATEX ULTIMATE',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','STOCK','5','3',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','DESCRIPCION','PINTURA LÁTEX 100% ACRÍLICA BASE AGUA','PINTURA LÁTEX 100% ACRÍLICA BASE AGUA',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','SKU','LUB0000001','LUB0000001',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','UNIDAD','400','400',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','21','PRECIOUNIDAD','200','200',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','NOMBREPRODUCTO','LATEX PLUS','LATEX PLUS',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','STOCK','200','0',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','DESCRIPCION','PINTURA LÁTEX ACRÍLICA BASE AGUA','PINTURA LÁTEX ACRÍLICA BASE AGUA',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','SKU','LUB0000002','LUB0000002',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','UNIDAD','GALON','GALON',null);
Insert into EJE.BITACORA (FECHA,USUARIO,NOMBRETABLA,LLAVE,NOMBRECAMPO,VALORANTERIOR,VALORNUEVO,OBSERVACIONES) values (to_date('24/11/19','DD/MM/RR'),'EJE','PRODUCTO','22','PRECIOUNIDAD','150','150',null);
REM INSERTING into EJE.CANAL
SET DEFINE OFF;
Insert into EJE.CANAL (IDCANAL,NOMBRECANAL,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'TELEFONO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.CLIENTE
SET DEFINE OFF;
Insert into EJE.CLIENTE (IDCLIENTE,IDPERSONA,IDESTADO) values (1,2,1);
REM INSERTING into EJE.COLONIA
SET DEFINE OFF;
Insert into EJE.COLONIA (IDCOLONIA,IDMUNICIPIO,COLONIA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,2,'EL PAJON',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.COLONIA (IDCOLONIA,IDMUNICIPIO,COLONIA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,2,'CIENEGA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.COLONIA (IDCOLONIA,IDMUNICIPIO,COLONIA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,2,'LAGUNA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.DEPARTAMENTO
SET DEFINE OFF;
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,1,'ALTA VERAPAZ',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,1,'BAJA VERAPAZ',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,1,'CHIMALTENANGO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (4,1,'CHIQUIMULA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (5,1,'EL PROGRESO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (6,1,'ESCUINTLA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.DEPARTAMENTO (IDDEPARTAMENTO,IDPAIS,DEPARTAMENTO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (7,1,'GUATEMALA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.DIRECCION
SET DEFINE OFF;
REM INSERTING into EJE.DIRECCION_PERSONA
SET DEFINE OFF;
REM INSERTING into EJE.EMPLEADO
SET DEFINE OFF;
Insert into EJE.EMPLEADO (FECHAINGRESO,IDEMPLEADO,IDPERSONA,IDESTADO,IDESPECIALIDADES,FECHASALIDA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (to_date('01/02/18','DD/MM/RR'),1,1,1,1,null,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.ESPECIALIDADES
SET DEFINE OFF;
Insert into EJE.ESPECIALIDADES (IDESPECIALIDADES,ESPECIALIDADES,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'QUIMICO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ESPECIALIDADES (IDESPECIALIDADES,ESPECIALIDADES,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,'TECNICO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ESPECIALIDADES (IDESPECIALIDADES,ESPECIALIDADES,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,'LABORATORIO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.ESTADO
SET DEFINE OFF;
Insert into EJE.ESTADO (IDESTADO,ESTADO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'ACTIVO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ESTADO (IDESTADO,ESTADO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,'INACTIVO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ESTADO (IDESTADO,ESTADO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,'EN PROCESO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.FACTURA
SET DEFINE OFF;
REM INSERTING into EJE.MODO_PAGO
SET DEFINE OFF;
Insert into EJE.MODO_PAGO (NO_PAGO,NOMBRE,OTRODETALLE) values (1,'EFECTIVO','EFECTIVO');
Insert into EJE.MODO_PAGO (NO_PAGO,NOMBRE,OTRODETALLE) values (23,'CHEQUE','CHEQUE');
Insert into EJE.MODO_PAGO (NO_PAGO,NOMBRE,OTRODETALLE) values (24,'T. CREDITO','T. CREDITO');
REM INSERTING into EJE.MUNICIPIO
SET DEFINE OFF;
Insert into EJE.MUNICIPIO (IDMUNICIPIO,IDDEPARTAMENTO,IDPAIS,MUNICIPIO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,7,1,'GUATEMALA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.MUNICIPIO (IDMUNICIPIO,IDDEPARTAMENTO,IDPAIS,MUNICIPIO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,7,1,'SANTA CAT. PINULA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.MUNICIPIO (IDMUNICIPIO,IDDEPARTAMENTO,IDPAIS,MUNICIPIO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,7,1,'SAN JOSE PINULA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.PAIS
SET DEFINE OFF;
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'GUATEMALA',to_date('23/11/19','DD/MM/RR'),'EJE',to_date('23/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (21,'ARGENTINA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (22,'BOLIVIA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (23,'BRASIL',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (24,'CHILE',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (25,'COLOMBIA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (26,'COSTA RICA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (27,'CUBA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (28,'EL SALVADOR',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (29,'GUAYANA FRANCESA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (30,'GRANADA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (31,'GUAYANA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (32,'HAITÍ',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (33,'HONDURAS',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (34,'JAMAICA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (35,'MÉXICO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (36,'NICARAGUA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (37,'PARAGUAY',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (38,'PANAMÁ',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (39,'PERÚ',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (40,'PUERTO RICO',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (41,'PREPÚBLICA DOMINICANA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (42,'SURINAM',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (43,'URUGUAY',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (44,'VENEZUELA',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PAIS (IDPAIS,PAIS,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (46,'1',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.PERSONA
SET DEFINE OFF;
Insert into EJE.PERSONA (IDPERSONA,NOMBRE1,NOMBRE2,NOMBRE3,APELLIDO1,APELLIDO2,APECASADA,FECHA_NACIMIENTO,GENERO,TELEFONO,EMAIL,ESTADOCIVIL,DPI,NIT,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'ANDRES','DE JESUS',null,'ALVAREZ','MONROY',null,to_date('24/12/95','DD/MM/RR'),'MASCULINO',52378549,'andres.alvarezmonroy@gmail.com','CASADO','176226330101','C/F',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PERSONA (IDPERSONA,NOMBRE1,NOMBRE2,NOMBRE3,APELLIDO1,APELLIDO2,APECASADA,FECHA_NACIMIENTO,GENERO,TELEFONO,EMAIL,ESTADOCIVIL,DPI,NIT,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,'CARLOS',null,null,'ALVAREZ',null,null,to_date('01/01/95','DD/MM/RR'),'MASCULINO',52341549,null,'CASADO','176247330101','451278-K',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.PRODUCTO
SET DEFINE OFF;
Insert into EJE.PRODUCTO (IDPRODUCTO,NOMBREPRODUCTO,STOCK,DESCRIPCION,SKU,UNIDAD,PRECIOUNIDAD) values (21,'LATEX ULTIMATE',3,'PINTURA LÁTEX 100% ACRÍLICA BASE AGUA','LUB0000001','400',200);
Insert into EJE.PRODUCTO (IDPRODUCTO,NOMBREPRODUCTO,STOCK,DESCRIPCION,SKU,UNIDAD,PRECIOUNIDAD) values (22,'LATEX PLUS',0,'PINTURA LÁTEX ACRÍLICA BASE AGUA','LUB0000002','GALON',150);
Insert into EJE.PRODUCTO (IDPRODUCTO,NOMBREPRODUCTO,STOCK,DESCRIPCION,SKU,UNIDAD,PRECIOUNIDAD) values (23,'LATEX ROYAL',100,'PINTURA LÁTEX VINIL ACRÍLICA BASE AGUA','LUB0000003','GALON',110);
REM INSERTING into EJE.PROMOCION
SET DEFINE OFF;
Insert into EJE.PROMOCION (IDPROMO,NOMBREPROMO,CODIGO,FECHAINICIO,FECHAFIN,PORCEPROMO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'BLACK WEEK','1234ABC',to_date('24/11/19','DD/MM/RR'),to_date('30/11/19','DD/MM/RR'),'0.15',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.PROMOCION (IDPROMO,NOMBREPROMO,CODIGO,FECHAINICIO,FECHAFIN,PORCEPROMO,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,'NAVIDEÑO','1235ABC',to_date('01/12/19','DD/MM/RR'),to_date('22/12/19','DD/MM/RR'),'0.10',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.SUCURSAL
SET DEFINE OFF;
Insert into EJE.SUCURSAL (IDSUCURSAL,SUCURSAL,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,'CARRETERA AL SALVADOR PINTURA 1',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.SUCURSAL (IDSUCURSAL,SUCURSAL,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,'WALLMART KM 13.5 PINTURA 2',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.SUCURSAL (IDSUCURSAL,SUCURSAL,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,'ZONA 9 PINTURA 3',to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.USUARIO
SET DEFINE OFF;
Insert into EJE.USUARIO (IDUSUARIO,IDEMPLEADO,IDSUCURSAL,USUARIO,PW) values (1,1,2,'andres-alvarez','umg');
REM INSERTING into EJE.VENTA
SET DEFINE OFF;
Insert into EJE.VENTA (IDVENTA,IDPRODUCTO,IDPROMO,IDCANAL,IDCLIENTE,FECHAVENTA,CANTIDAD,PRECIOUNIDAD,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (22,21,null,1,1,to_date('24/11/19','DD/MM/RR'),140,200,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.VENTA (IDVENTA,IDPRODUCTO,IDPROMO,IDCANAL,IDCLIENTE,FECHAVENTA,CANTIDAD,PRECIOUNIDAD,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (23,21,null,1,1,to_date('24/11/19','DD/MM/RR'),2,200,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.VENTA (IDVENTA,IDPRODUCTO,IDPROMO,IDCANAL,IDCLIENTE,FECHAVENTA,CANTIDAD,PRECIOUNIDAD,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (24,22,null,1,1,to_date('24/11/19','DD/MM/RR'),200,200,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
REM INSERTING into EJE.ZONA
SET DEFINE OFF;
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (1,2,1,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (2,2,2,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (3,2,3,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (4,2,4,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (5,2,5,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (6,2,6,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (7,2,7,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
Insert into EJE.ZONA (IDZONA,IDMUNICIPIO,ZONA,CREADO,CREADO_POR,ACTUALIZADO,ACTUALIZADO_POR) values (8,2,8,to_date('24/11/19','DD/MM/RR'),'EJE',to_date('24/11/19','DD/MM/RR'),'EJE');
--------------------------------------------------------
--  DDL for Index PK_CANAL
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_CANAL ON CANAL (IDCANAL) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_CLIENTE
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_CLIENTE ON CLIENTE (IDCLIENTE) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_COLONIA
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_COLONIA ON COLONIA (IDCOLONIA) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_DEPARTAMENTO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_DEPARTAMENTO ON DEPARTAMENTO (IDDEPARTAMENTO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_DIRECCION
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_DIRECCION ON DIRECCION (IDDIRECCION) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_EMPLEADO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_EMPLEADO ON EMPLEADO (IDEMPLEADO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_ESPECIALIDADES
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_ESPECIALIDADES ON ESPECIALIDADES (IDESPECIALIDADES) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_ESTADO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_ESTADO ON ESTADO (IDESTADO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_FACTURA
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_FACTURA ON FACTURA (NOFACTURA) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_MODO_PAGO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_MODO_PAGO ON MODO_PAGO (NO_PAGO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_MUNICIPIO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_MUNICIPIO ON MUNICIPIO (IDMUNICIPIO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_PAIS
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_PAIS ON PAIS (IDPAIS) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_PERSONA
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_PERSONA ON PERSONA (IDPERSONA) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_PRODUCTO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_PRODUCTO ON PRODUCTO (IDPRODUCTO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_PROMOCION
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_PROMOCION ON PROMOCION (IDPROMO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_SUCURSAL
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_SUCURSAL ON SUCURSAL (IDSUCURSAL) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_USUARIO
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_USUARIO ON USUARIO (IDUSUARIO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_VENTA
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_VENTA ON VENTA (IDVENTA) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Index PK_ZONA
--------------------------------------------------------

  CREATE UNIQUE INDEX PK_ZONA ON ZONA (IDZONA) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS ;
--------------------------------------------------------
--  DDL for Trigger TRG_AIR_ACTUALIZASTOCK
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_AIR_ACTUALIZASTOCK 
AFTER INSERT ON VENTA
FOR EACH ROW
BEGIN
UPDATE PRODUCTO
SET STOCK = STOCK - :NEW.CANTIDAD
WHERE IDPRODUCTO = :NEW.IDPRODUCTO;
END;
/
ALTER TRIGGER TRG_AIR_ACTUALIZASTOCK ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_CANAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_CANAL 
BEFORE DELETE ON CANAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'IDCANAL', :OLD.IDCANAL, NULL, 'VALOR ELIMINADO');
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'NOMBRECANAL', :OLD.NOMBRECANAL, NULL, 'VALOR ELIMINADO');	
END TRG_BDR_CANAL;
/
ALTER TRIGGER TRG_BDR_CANAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_CLIENTE 
BEFORE DELETE ON CLIENTE
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDCLIENTE', :OLD.IDCLIENTE, NULL, 'VALOR ELIMINADO');
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDPERSONA', :OLD.IDPERSONA, NULL, 'VALOR ELIMINADO');	
END TRG_BDR_CLIENTE;
/
ALTER TRIGGER TRG_BDR_CLIENTE ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_COLONIA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_COLONIA 
BEFORE DELETE ON COLONIA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'IDCOLONIA', :OLD.IDCOLONIA, NULL, 'VALOR ELIMINADO');
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO');	
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'COLONIA', :OLD.COLONIA, NULL, 'VALOR ELIMINADO');
END TRG_BDR_COLONIA;
/
ALTER TRIGGER TRG_BDR_COLONIA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_DEPARTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_DEPARTAMENTO 
BEFORE DELETE ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, NULL, 'VALOR ELIMINADO');
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO');	
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'DEPARTAMENTO', :OLD.DEPARTAMENTO, NULL, 'VALOR ELIMINADO');
END TRG_BDR_DEPARTAMENTO;
/
ALTER TRIGGER TRG_BDR_DEPARTAMENTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_DIRECCION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_DIRECCION 
BEFORE DELETE ON DIRECCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDDIRECCION', :OLD.IDDIRECCION, NULL, 'VALOR ELIMINADO');
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDZONA', :OLD.IDZONA, NULL, 'VALOR ELIMINADO');	
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDCOLONIA', :OLD.IDCOLONIA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'CALLE_AVENIDA', :OLD.CALLE_AVENIDA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'NUMERO', :OLD.NUMERO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'EDIFICIO', :OLD.EDIFICIO, NULL, 'VALOR ELIMINADO');
END TRG_BDR_DIRECCION;
/
ALTER TRIGGER TRG_BDR_DIRECCION ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_EMPLEADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_EMPLEADO 
BEFORE DELETE ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHAINGRESO', :OLD.FECHAINGRESO, NULL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDPERSONA', :OLD.IDPERSONA, NULL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESTADO', :OLD.IDESTADO, NULL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, NULL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHASALIDA', :OLD.FECHASALIDA, NULL);	
END TRG_BDR_EMPLEADO;
/
ALTER TRIGGER TRG_BDR_EMPLEADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_ESPECIALIDADES
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_ESPECIALIDADES 
BEFORE DELETE ON ESPECIALIDADES
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'ESPECIALIDADES', :OLD.ESPECIALIDADES, NULL, 'VALOR ELIMINADO');	
END TRG_BDR_ESPECIALIDADES;
/
ALTER TRIGGER TRG_BDR_ESPECIALIDADES ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_ESTADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_ESTADO 
BEFORE DELETE ON ESTADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'IDESTADO', :OLD.IDESTADO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'ESTADO', :OLD.ESTADO, NULL, 'VALOR ELIMINADO');	
END TRG_BDR_ESTADO;
/
ALTER TRIGGER TRG_BDR_ESTADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_FACTURA 
BEFORE DELETE ON FACTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NOFACTURA', :OLD.NOFACTURA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'IDVENTA', :OLD.IDVENTA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NO_PAGO', :OLD.NO_PAGO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'FECHA', :OLD.FECHA, NULL, 'VALOR ELIMINADO');
END TRG_BDR_FACTURA;
/
ALTER TRIGGER TRG_BDR_FACTURA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_MODO_PAGO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_MODO_PAGO 
BEFORE DELETE ON MODO_PAGO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NO_PAGO', :OLD.NO_PAGO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NOMBRE', :OLD.NOMBRE, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'OTRODETALLE', :OLD.OTRODETALLE, NULL, 'VALOR ELIMINADO');
END TRG_BDR_MODO_PAGO;
/
ALTER TRIGGER TRG_BDR_MODO_PAGO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_MUNICIPIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_MUNICIPIO 
BEFORE DELETE ON MUNICIPIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'MUNICIPIO', :OLD.MUNICIPIO, NULL, 'VALOR ELIMINADO');
END TRG_BDR_MUNICIPIO;
/
ALTER TRIGGER TRG_BDR_MUNICIPIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_PAIS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_PAIS 
BEFORE DELETE ON PAIS
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'PAIS', :OLD.PAIS, NULL, 'VALOR ELIMINADO');
END TRG_BDR_PAIS;
/
ALTER TRIGGER TRG_BDR_PAIS ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_PERSONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_PERSONA 
BEFORE DELETE ON PERSONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE1', :OLD.NOMBRE1, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE2', :OLD.NOMBRE2, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE3', :OLD.NOMBRE3, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO1', :OLD.APELLIDO1, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO2', :OLD.APELLIDO2, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APECASADA', :OLD.APECASADA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'FECHA_NACIMIENTO', :OLD.FECHA_NACIMIENTO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'GENERO', :OLD.GENERO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'TELEFONO', :OLD.TELEFONO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'EMAIL', :OLD.EMAIL, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'ESTADOCIVIL', :OLD.ESTADOCIVIL, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'DPI', :OLD.DPI, NULL, 'VALOR ELIMINADO');
END TRG_BDR_PERSONA;
/
ALTER TRIGGER TRG_BDR_PERSONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_PRODUCTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_PRODUCTO 
BEFORE DELETE ON PRODUCTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'NOMBREPRODUCTO', :OLD.NOMBREPRODUCTO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'STOCK', :OLD.STOCK, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'DESCRIPCION', :OLD.DESCRIPCION, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'SKU', :OLD.SKU, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'UNIDAD', :OLD.UNIDAD, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, NULL, 'VALOR ELIMINADO');
END TRG_BDR_PRODUCTO;
/
ALTER TRIGGER TRG_BDR_PRODUCTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_PROMOCION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_PROMOCION 
BEFORE DELETE ON PROMOCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'NOMBREPROMO', :OLD.NOMBREPROMO,  NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'CODIGO', :OLD.CODIGO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAINICIO', :OLD.FECHAINICIO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAFIN', :OLD.FECHAFIN, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'PORCEPROMO', :OLD.PORCEPROMO, NULL, 'VALOR ELIMINADO');
END TRG_BDR_PROMOCION;
/
ALTER TRIGGER TRG_BDR_PROMOCION ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_SUCURSAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_SUCURSAL 
BEFORE DELETE ON SUCURSAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'IDSUCURSAL', :OLD.IDSUCURSAL,  NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'SUCURSAL', :OLD.SUCURSAL, NULL, 'VALOR ELIMINADO');
END TRG_BDR_SUCURSAL;
/
ALTER TRIGGER TRG_BDR_SUCURSAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_USUARIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_USUARIO 
BEFORE DELETE ON USUARIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDEMPLEADO', :OLD.IDEMPLEADO,  NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDSUCURSAL', :OLD.USUARIO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'USUARIO', :OLD.USUARIO,  NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'PW', :OLD.PW, NULL, 'VALOR ELIMINADO');
END TRG_BDR_USUARIO;
/
ALTER TRIGGER TRG_BDR_USUARIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_VENTA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_VENTA 
BEFORE DELETE ON VENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPRODUCTO', :OLD.IDPRODUCTO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPROMO', :OLD.IDPROMO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCANAL', :OLD.IDCANAL, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCLIENTE', :OLD.IDCLIENTE, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'FECHAVENTA', :OLD.FECHAVENTA, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'CANTIDAD', :OLD.CANTIDAD, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, NULL, 'VALOR ELIMINADO');
END TRG_BDR_VENTA;
/
ALTER TRIGGER TRG_BDR_VENTA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BDR_ZONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BDR_ZONA 
BEFORE DELETE ON ZONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO');
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'ZONA', :OLD.ZONA, NULL, 'VALOR ELIMINADO');
END TRG_BDR_ZONA;
/
ALTER TRIGGER TRG_BDR_ZONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_CANAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_CANAL 
BEFORE INSERT ON CANAL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDCANAL>>
  BEGIN
    IF INSERTING AND :NEW.IDCANAL IS NULL THEN
      SELECT SEQ_IDCANAL.NEXTVAL INTO :NEW.IDCANAL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER TRG_BIR_CANAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_CLIENTE 
BEFORE INSERT ON CLIENTE
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDCLIENTE>>
  BEGIN
    IF INSERTING AND :NEW.IDCLIENTE IS NULL THEN
      SELECT SEQ_IDCLIENTE.NEXTVAL INTO :NEW.IDCLIENTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_CLIENTE;
/
ALTER TRIGGER TRG_BIR_CLIENTE ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_COLONIA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_COLONIA 
BEFORE INSERT ON COLONIA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDCOLONIA>>
  BEGIN
    IF INSERTING AND :NEW.IDCOLONIA IS NULL THEN
      SELECT SEQ_IDCOLONIA.NEXTVAL INTO :NEW.IDCOLONIA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER TRG_BIR_COLONIA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_DEPARTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_DEPARTAMENTO 
BEFORE INSERT ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDDEPARTAMENTO>>
  BEGIN
    IF INSERTING AND :NEW.IDDEPARTAMENTO IS NULL THEN
      SELECT SEQ_IDDEPARTAMENTO.NEXTVAL INTO :NEW.IDDEPARTAMENTO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_DEPARTAMENTO;
/
ALTER TRIGGER TRG_BIR_DEPARTAMENTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_EMPLEADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_EMPLEADO 
BEFORE INSERT ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDEMPLEADO>>
  BEGIN
    IF INSERTING AND :NEW.IDEMPLEADO IS NULL THEN
      SELECT SEQ_IDEMPLEADO.NEXTVAL INTO :NEW.IDEMPLEADO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_EMPLEADO;
/
ALTER TRIGGER TRG_BIR_EMPLEADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_ESPECIALIDADES
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_ESPECIALIDADES 
BEFORE INSERT ON ESPECIALIDADES
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDESPECIALIDADES>>
  BEGIN
    IF INSERTING AND :NEW.IDESPECIALIDADES IS NULL THEN
      SELECT SEQ_IDESPECIALIDADES.NEXTVAL INTO :NEW.IDESPECIALIDADES FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_ESPECIALIDADES;
/
ALTER TRIGGER TRG_BIR_ESPECIALIDADES ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_ESTADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_ESTADO 
BEFORE INSERT ON ESTADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDESTADO>>
  BEGIN
    IF INSERTING AND :NEW.IDESTADO IS NULL THEN
      SELECT SEQ_IDESTADO.NEXTVAL INTO :NEW.IDESTADO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_ESTADO;
/
ALTER TRIGGER TRG_BIR_ESTADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_FACTURA 
BEFORE INSERT ON FACTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDFACTURA>>
  BEGIN
    IF INSERTING AND :NEW.NOFACTURA IS NULL THEN
      SELECT SEQ_NOFACTURA.NEXTVAL INTO :NEW.NOFACTURA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_FACTURA;
/
ALTER TRIGGER TRG_BIR_FACTURA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_MODO_PAGO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_MODO_PAGO 
BEFORE INSERT ON MODO_PAGO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDMODO_PAGO>>
  BEGIN
    IF INSERTING AND :NEW.NO_PAGO IS NULL THEN
      SELECT SEQ_NO_PAGO.NEXTVAL INTO :NEW.NO_PAGO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_MODO_PAGO;
/
ALTER TRIGGER TRG_BIR_MODO_PAGO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_MUNICIPIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_MUNICIPIO 
BEFORE INSERT ON MUNICIPIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDMUNICIPIO>>
  BEGIN
    IF INSERTING AND :NEW.IDMUNICIPIO IS NULL THEN
      SELECT SEQ_IDMUNICIPIO.NEXTVAL INTO :NEW.IDMUNICIPIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_MUNICIPIO;
/
ALTER TRIGGER TRG_BIR_MUNICIPIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_PAIS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_PAIS 
BEFORE INSERT ON PAIS
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPAIS>>
  BEGIN
    IF INSERTING AND :NEW.IDPAIS IS NULL THEN
      SELECT SEQ_IDPAIS.NEXTVAL INTO :NEW.IDPAIS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_PAIS;
/
ALTER TRIGGER TRG_BIR_PAIS ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_PERSONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_PERSONA 
BEFORE INSERT ON PERSONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPERSONA>>
  BEGIN
    IF INSERTING AND :NEW.IDPERSONA IS NULL THEN
      SELECT SEQ_IDPERSONA.NEXTVAL INTO :NEW.IDPERSONA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_PERSONA;
/
ALTER TRIGGER TRG_BIR_PERSONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_PRODUCTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_PRODUCTO 
BEFORE INSERT ON PRODUCTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPRODUCTO>>
  BEGIN
    IF INSERTING AND :NEW.IDPRODUCTO IS NULL THEN
      SELECT SEQ_IDPRODUCTO.NEXTVAL INTO :NEW.IDPRODUCTO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_PRODUCTO;
/
ALTER TRIGGER TRG_BIR_PRODUCTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_PROMOCION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_PROMOCION 
BEFORE INSERT ON PROMOCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPROMO>>
  BEGIN
    IF INSERTING AND :NEW.IDPROMO IS NULL THEN
      SELECT SEQ_IDPROMO.NEXTVAL INTO :NEW.IDPROMO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_PROMOCION;
/
ALTER TRIGGER TRG_BIR_PROMOCION ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_SUCURSAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_SUCURSAL 
BEFORE INSERT ON SUCURSAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPROMO>>
  BEGIN
    IF INSERTING AND :NEW.IDSUCURSAL IS NULL THEN
      SELECT SEQ_IDSUCURSAL.NEXTVAL INTO :NEW.IDSUCURSAL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_SUCURSAL;
/
ALTER TRIGGER TRG_BIR_SUCURSAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_USUARIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_USUARIO 
BEFORE INSERT ON USUARIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDPROMO>>
  BEGIN
    IF INSERTING AND :NEW.IDUSUARIO IS NULL THEN
      SELECT SEQ_IDUSUARIO.NEXTVAL INTO :NEW.IDUSUARIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_USUARIO;
/
ALTER TRIGGER TRG_BIR_USUARIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_VENTA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_VENTA 
BEFORE INSERT ON VENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
    DECLARE
    NSTOCK NUMBER;
    BEGIN
		BEGIN
			SELECT STOCK
				INTO NSTOCK
				FROM PRODUCTO 
				WHERE IDPRODUCTO = :NEW.IDPRODUCTO;
    EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NSTOCK := 0;
			WHEN TOO_MANY_ROWS THEN
				NSTOCK :=0;
		END;
		IF NSTOCK < :NEW.CANTIDAD THEN
			PRC_BITACORA('PRODUCTO', :NEW.IDPRODUCTO, 'IDPRODUCTO', NSTOCK, :NEW.CANTIDAD, 'NO HAY SUFICIENTE PRODUCTO PARA LA VENTA ' ||:NEW.IDPRODUCTO	); 
			RAISE_APPLICATION_ERROR(-20001, 'NO HAY SUFICIENTE PRODUCTO PARA LA VENTA');
		END IF;
    END;
END TRG_BIR_VENTA;
/
ALTER TRIGGER TRG_BIR_VENTA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_VENTA_S
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_VENTA_S 
BEFORE INSERT ON VENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDVENTA>>
  BEGIN
    IF INSERTING AND :NEW.IDVENTA IS NULL THEN
      SELECT SEQ_IDVENTA.NEXTVAL INTO :NEW.IDVENTA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_VENTA_S;
/
ALTER TRIGGER TRG_BIR_VENTA_S ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIR_ZONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIR_ZONA 
BEFORE INSERT ON ZONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDZONA>>
  BEGIN
    IF INSERTING AND :NEW.IDZONA IS NULL THEN
      SELECT SEQ_IDZONA.NEXTVAL INTO :NEW.IDZONA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_ZONA;
/
ALTER TRIGGER TRG_BIR_ZONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_CANAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_CANAL 
BEFORE INSERT OR UPDATE ON CANAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_CANAL;
/
ALTER TRIGGER TRG_BIU_CANAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_COLONIA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_COLONIA 
BEFORE INSERT OR UPDATE ON COLONIA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_COLONIA;
/
ALTER TRIGGER TRG_BIU_COLONIA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_DEPARTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_DEPARTAMENTO 
BEFORE INSERT OR UPDATE ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_DEPARTAMENTO;
/
ALTER TRIGGER TRG_BIU_DEPARTAMENTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_EMPLEADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_EMPLEADO 
BEFORE INSERT OR UPDATE ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_EMPLEADO;
/
ALTER TRIGGER TRG_BIU_EMPLEADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_ESPECIALIDADES
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_ESPECIALIDADES 
BEFORE INSERT OR UPDATE ON ESPECIALIDADES
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_ESPECIALIDADES;
/
ALTER TRIGGER TRG_BIU_ESPECIALIDADES ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_ESTADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_ESTADO 
BEFORE INSERT OR UPDATE ON ESTADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_ESTADO;
/
ALTER TRIGGER TRG_BIU_ESTADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_FACTURA 
BEFORE INSERT OR UPDATE ON FACTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_FACTURA;
/
ALTER TRIGGER TRG_BIU_FACTURA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_MUNICIPIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_MUNICIPIO 
BEFORE INSERT OR UPDATE ON MUNICIPIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_MUNICIPIO;
/
ALTER TRIGGER TRG_BIU_MUNICIPIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_PAIS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_PAIS 
BEFORE INSERT OR UPDATE ON PAIS
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_PAIS;
/
ALTER TRIGGER TRG_BIU_PAIS ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_PERSONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_PERSONA 
BEFORE INSERT OR UPDATE ON PERSONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_PERSONA;
/
ALTER TRIGGER TRG_BIU_PERSONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_PROMOCION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_PROMOCION 
BEFORE INSERT OR UPDATE ON PROMOCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_PROMOCION;
/
ALTER TRIGGER TRG_BIU_PROMOCION ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_SUCURSAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_SUCURSAL 
BEFORE INSERT OR UPDATE ON SUCURSAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_SUCURSAL;
/
ALTER TRIGGER TRG_BIU_SUCURSAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_VENTA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_VENTA 
BEFORE INSERT OR UPDATE ON VENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_VENTA;
/
ALTER TRIGGER TRG_BIU_VENTA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BIU_ZONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BIU_ZONA 
BEFORE INSERT OR UPDATE ON ZONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
    IF INSERTING THEN
		:NEW.CREADO := SYSDATE;
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    END IF;
    :NEW.ACTUALIZADO := SYSDATE;
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
END TRG_BIU_ZONA;
/
ALTER TRIGGER TRG_BIU_ZONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_CANAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_CANAL 
BEFORE UPDATE ON CANAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'NOMBRECANAL', :OLD.NOMBRECANAL, :NEW.NOMBRECANAL);
END TRG_BUR_CANAL;
/
ALTER TRIGGER TRG_BUR_CANAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_CLIENTE 
BEFORE UPDATE ON CLIENTE
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDPERSONA', :OLD.IDPERSONA, :NEW.IDPERSONA);
END TRG_BUR_CLIENTE;
/
ALTER TRIGGER TRG_BUR_CLIENTE ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_COLONIA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_COLONIA 
BEFORE UPDATE ON COLONIA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'COLONIA', :OLD.COLONIA, :NEW.COLONIA);
END TRG_BUR_COLONIA;
/
ALTER TRIGGER TRG_BUR_COLONIA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_DEPARTAMENTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_DEPARTAMENTO 
BEFORE UPDATE ON DEPARTAMENTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'DEPARTAMENTO', :OLD.DEPARTAMENTO, :NEW.DEPARTAMENTO);
END TRG_BUR_DEPARTAMENTO;
/
ALTER TRIGGER TRG_BUR_DEPARTAMENTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_EMPLEADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_EMPLEADO 
BEFORE UPDATE ON EMPLEADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHAINGRESO', :OLD.FECHAINGRESO, :NEW.FECHAINGRESO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDPERSONA', :OLD.IDPERSONA, :NEW.IDPERSONA);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESTADO', :OLD.IDESTADO, :NEW.IDESTADO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, :NEW.IDESPECIALIDADES);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHASALIDA', :OLD.FECHASALIDA, :NEW.FECHASALIDA);	
END TRG_BUR_EMPLEADO;
/
ALTER TRIGGER TRG_BUR_EMPLEADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_ESPECIALIDADES
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_ESPECIALIDADES 
BEFORE UPDATE ON ESPECIALIDADES
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'ESPECIALIDADES', :OLD.ESPECIALIDADES, :NEW.ESPECIALIDADES);
END TRG_BUR_ESPECIALIDADES;
/
ALTER TRIGGER TRG_BUR_ESPECIALIDADES ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_ESTADO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_ESTADO 
BEFORE UPDATE ON ESTADO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'ESTADO', :OLD.ESTADO, :NEW.ESTADO);
END TRG_BUR_ESTADO;
/
ALTER TRIGGER TRG_BUR_ESTADO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_FACTURA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_FACTURA 
BEFORE UPDATE ON FACTURA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'IDVENTA', :OLD.IDVENTA, :NEW.IDVENTA);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NO_PAGO', :OLD.NO_PAGO, :NEW.NO_PAGO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'FECHA', :OLD.FECHA, :NEW.FECHA);	
END TRG_BUR_FACTURA;
/
ALTER TRIGGER TRG_BUR_FACTURA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_MODO_PAGO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_MODO_PAGO 
BEFORE UPDATE ON MODO_PAGO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NOMBRE', :OLD.NOMBRE, :NEW.NOMBRE);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'OTRODETALLE', :OLD.OTRODETALLE, :NEW.OTRODETALLE);
END TRG_BUR_MODO_PAGO;
/
ALTER TRIGGER TRG_BUR_MODO_PAGO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_MUNICIPIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_MUNICIPIO 
BEFORE UPDATE ON MUNICIPIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, :NEW.IDDEPARTAMENTO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDPAIS', :OLD.IDPAIS, :NEW.IDPAIS);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'MUNICIPIO', :OLD.MUNICIPIO, :NEW.MUNICIPIO);
END TRG_BUR_MUNICIPIO;
/
ALTER TRIGGER TRG_BUR_MUNICIPIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_PAIS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_PAIS 
BEFORE UPDATE ON PAIS
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'PAIS', :OLD.PAIS, :NEW.PAIS);
END TRG_BUR_PAIS;
/
ALTER TRIGGER TRG_BUR_PAIS ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_PERSONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_PERSONA 
BEFORE UPDATE ON PERSONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE1', :OLD.NOMBRE1, :NEW.NOMBRE1);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE2', :OLD.NOMBRE2, :NEW.NOMBRE2);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE3', :OLD.NOMBRE3, :NEW.NOMBRE3);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO1', :OLD.APELLIDO1, :NEW.APELLIDO1);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO2', :OLD.APELLIDO2, :NEW.APELLIDO2);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APECASADA', :OLD.APECASADA, :NEW.APECASADA);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'FECHA_NACIMIENTO', :OLD.FECHA_NACIMIENTO, :NEW.FECHA_NACIMIENTO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'GENERO', :OLD.GENERO, :NEW.GENERO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'TELEFONO', :OLD.TELEFONO, :NEW.TELEFONO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'EMAIL', :OLD.EMAIL, :NEW.EMAIL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'ESTADOCIVIL', :OLD.ESTADOCIVIL, :NEW.ESTADOCIVIL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'DPI', :OLD.DPI, :NEW.DPI);
END TRG_BUR_PERSONA;
/
ALTER TRIGGER TRG_BUR_PERSONA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_PRODUCTO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_PRODUCTO 
BEFORE UPDATE ON PRODUCTO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'NOMBREPRODUCTO', :OLD.NOMBREPRODUCTO, :NEW.NOMBREPRODUCTO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'STOCK', :OLD.STOCK, :NEW.STOCK);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'DESCRIPCION', :OLD.DESCRIPCION, :NEW.DESCRIPCION);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'SKU', :OLD.SKU, :NEW.SKU);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'UNIDAD', :OLD.UNIDAD, :NEW.UNIDAD);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, :NEW.PRECIOUNIDAD);
END TRG_BUR_PRODUCTO;
/
ALTER TRIGGER TRG_BUR_PRODUCTO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_PROMOCION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_PROMOCION 
BEFORE UPDATE ON PROMOCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'NOMBREPROMO', :OLD.NOMBREPROMO, :NEW.NOMBREPROMO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'CODIGO', :OLD.CODIGO, :NEW.CODIGO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAINICIO', :OLD.FECHAINICIO, :NEW.FECHAINICIO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAFIN', :OLD.FECHAFIN, :NEW.FECHAFIN);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'PORCEPROMO', :OLD.PORCEPROMO, :NEW.PORCEPROMO);
END TRG_BUR_PROMOCION;
/
ALTER TRIGGER TRG_BUR_PROMOCION ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_SUCURSAL
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_SUCURSAL 
BEFORE UPDATE ON SUCURSAL
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'SUCURSAL', :OLD.SUCURSAL, :NEW.SUCURSAL);

END TRG_BUR_SUCURSAL;
/
ALTER TRIGGER TRG_BUR_SUCURSAL ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_USUARIO
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_USUARIO 
BEFORE UPDATE ON USUARIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDEMPLEADO', :OLD.IDEMPLEADO, :NEW.IDEMPLEADO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDSUCURSAL', :OLD.IDSUCURSAL, :NEW.IDSUCURSAL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'USUARIO', :OLD.USUARIO, :NEW.USUARIO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'PW', :OLD.PW, :NEW.PW);	
END TRG_BUR_USUARIO;
/
ALTER TRIGGER TRG_BUR_USUARIO ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_VENTA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_VENTA 
BEFORE UPDATE ON VENTA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPRODUCTO', :OLD.IDPRODUCTO, :NEW.IDPRODUCTO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPROMO', :OLD.IDPROMO, :NEW.IDPROMO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCANAL', :OLD.IDCANAL, :NEW.IDCANAL);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCLIENTE', :OLD.IDCLIENTE, :NEW.IDCLIENTE);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'FECHAVENTA', :OLD.FECHAVENTA, :NEW.FECHAVENTA);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'CANTIDAD', :OLD.CANTIDAD, :NEW.CANTIDAD);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, :NEW.PRECIOUNIDAD);

END TRG_BUR_VENTA;
/
ALTER TRIGGER TRG_BUR_VENTA ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BUR_ZONA
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER TRG_BUR_ZONA 
BEFORE UPDATE ON ZONA
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, :NEW.IDMUNICIPIO);
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'ZONA', :OLD.ZONA, :NEW.ZONA);	
END TRG_BUR_ZONA;
/
ALTER TRIGGER TRG_BUR_ZONA ENABLE;
--------------------------------------------------------
--  DDL for Procedure PRC_BITACORA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE PRC_BITACORA (PNOMBRETABLA IN VARCHAR2, PLLAVE IN VARCHAR2, PNOMBRECAMPO IN VARCHAR2, PVALORANTERIOR IN VARCHAR2, PVALORNUEVO IN VARCHAR2, POBSERVACIONES IN VARCHAR2) IS
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
	BEGIN
		INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES)
		VALUES (SYSDATE, USER, PNOMBRETABLA, PLLAVE, PNOMBRECAMPO, PVALORANTERIOR, PVALORNUEVO, POBSERVACIONES);
		COMMIT;
		EXCEPTION
			WHEN OTHERS THEN
				ROLLBACK;
		END;
END;

/
--------------------------------------------------------
--  DDL for Function AUTENTICACION_APLICACION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION AUTENTICACION_APLICACION (
	P_USUARIO IN VARCHAR2,
	P_PW IN VARCHAR2)
RETURN BOOLEAN IS
BEGIN
	FOR c1 IN (SELECT 1
		FROM USUARIO
		WHERE upper(USUARIO) = upper(P_USUARIO)
		AND upper(PW) = upper(P_PW))
	LOOP
	RETURN TRUE;
	END LOOP;
RETURN FALSE;
END;

/
--------------------------------------------------------
--  Constraints for Table ESTADO
--------------------------------------------------------

  ALTER TABLE ESTADO ADD UNIQUE (ESTADO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE ESTADO MODIFY (IDESTADO NOT NULL ENABLE);
  ALTER TABLE ESTADO MODIFY (ESTADO NOT NULL ENABLE);
  ALTER TABLE ESTADO MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE ESTADO MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE ESTADO MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE ESTADO MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE ESTADO ADD CONSTRAINT PK_ESTADO PRIMARY KEY (IDESTADO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE FACTURA MODIFY (NOFACTURA NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (IDVENTA NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (NO_PAGO NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (FECHA NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE FACTURA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE FACTURA ADD CONSTRAINT PK_FACTURA PRIMARY KEY (NOFACTURA)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table MODO_PAGO
--------------------------------------------------------

  ALTER TABLE MODO_PAGO MODIFY (NO_PAGO NOT NULL ENABLE);
  ALTER TABLE MODO_PAGO MODIFY (NOMBRE NOT NULL ENABLE);
  ALTER TABLE MODO_PAGO MODIFY (OTRODETALLE NOT NULL ENABLE);
  ALTER TABLE MODO_PAGO ADD CONSTRAINT PK_MODO_PAGO PRIMARY KEY (NO_PAGO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table PAIS
--------------------------------------------------------

  ALTER TABLE PAIS MODIFY (IDPAIS NOT NULL ENABLE);
  ALTER TABLE PAIS MODIFY (PAIS NOT NULL ENABLE);
  ALTER TABLE PAIS MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE PAIS MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE PAIS MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE PAIS MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE PAIS ADD CONSTRAINT PK_PAIS PRIMARY KEY (IDPAIS)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE PAIS ADD UNIQUE (PAIS)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table ZONA
--------------------------------------------------------

  ALTER TABLE ZONA MODIFY (IDZONA NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (IDMUNICIPIO NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (ZONA NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE ZONA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE ZONA ADD CONSTRAINT PK_ZONA PRIMARY KEY (IDZONA)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCTO
--------------------------------------------------------

  ALTER TABLE PRODUCTO MODIFY (IDPRODUCTO NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (NOMBREPRODUCTO NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (STOCK NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (DESCRIPCION NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (SKU NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (UNIDAD NOT NULL ENABLE);
  ALTER TABLE PRODUCTO MODIFY (PRECIOUNIDAD NOT NULL ENABLE);
  ALTER TABLE PRODUCTO ADD CONSTRAINT PK_PRODUCTO PRIMARY KEY (IDPRODUCTO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESPECIALIDADES
--------------------------------------------------------

  ALTER TABLE ESPECIALIDADES ADD UNIQUE (ESPECIALIDADES)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE ESPECIALIDADES MODIFY (IDESPECIALIDADES NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES MODIFY (ESPECIALIDADES NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE ESPECIALIDADES ADD CONSTRAINT PK_ESPECIALIDADES PRIMARY KEY (IDESPECIALIDADES)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table SUCURSAL
--------------------------------------------------------

  ALTER TABLE SUCURSAL MODIFY (IDSUCURSAL NOT NULL ENABLE);
  ALTER TABLE SUCURSAL MODIFY (SUCURSAL NOT NULL ENABLE);
  ALTER TABLE SUCURSAL MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE SUCURSAL MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE SUCURSAL MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE SUCURSAL MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE SUCURSAL ADD CONSTRAINT PK_SUCURSAL PRIMARY KEY (IDSUCURSAL)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE SUCURSAL ADD UNIQUE (SUCURSAL)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROMOCION
--------------------------------------------------------

  ALTER TABLE PROMOCION MODIFY (IDPROMO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (NOMBREPROMO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (CODIGO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (FECHAINICIO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (FECHAFIN NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (PORCEPROMO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE PROMOCION MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE PROMOCION ADD CONSTRAINT PK_PROMOCION PRIMARY KEY (IDPROMO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table MUNICIPIO
--------------------------------------------------------

  ALTER TABLE MUNICIPIO MODIFY (IDMUNICIPIO NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (IDDEPARTAMENTO NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (IDPAIS NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (MUNICIPIO NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE MUNICIPIO ADD CONSTRAINT PK_MUNICIPIO PRIMARY KEY (IDMUNICIPIO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table VENTA
--------------------------------------------------------

  ALTER TABLE VENTA MODIFY (IDVENTA NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (IDPRODUCTO NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (IDCANAL NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (IDCLIENTE NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (FECHAVENTA NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (CANTIDAD NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (PRECIOUNIDAD NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE VENTA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE VENTA ADD CONSTRAINT PK_VENTA PRIMARY KEY (IDVENTA)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE EMPLEADO MODIFY (FECHAINGRESO NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (IDEMPLEADO NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (IDPERSONA NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (IDESTADO NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE EMPLEADO MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE EMPLEADO ADD CONSTRAINT PK_EMPLEADO PRIMARY KEY (IDEMPLEADO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE CLIENTE MODIFY (IDCLIENTE NOT NULL ENABLE);
  ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (IDCLIENTE)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE CLIENTE MODIFY (IDPERSONA NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CANAL
--------------------------------------------------------

  ALTER TABLE CANAL MODIFY (IDCANAL NOT NULL ENABLE);
  ALTER TABLE CANAL MODIFY (NOMBRECANAL NOT NULL ENABLE);
  ALTER TABLE CANAL MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE CANAL MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE CANAL MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE CANAL MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE CANAL ADD CONSTRAINT CANAL_NOMBRECANAL_CC CHECK (NOMBRECANAL IN ('DIRECTO','ENLINEA','TELEFONO')) ENABLE;
  ALTER TABLE CANAL ADD CONSTRAINT PK_CANAL PRIMARY KEY (IDCANAL)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table DIRECCION_PERSONA
--------------------------------------------------------

  ALTER TABLE DIRECCION_PERSONA MODIFY (IDPERSONA NOT NULL ENABLE);
  ALTER TABLE DIRECCION_PERSONA MODIFY (IDDIRECCION NOT NULL ENABLE);
  ALTER TABLE DIRECCION_PERSONA MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE DIRECCION_PERSONA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE DIRECCION_PERSONA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE DIRECCION_PERSONA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DIRECCION
--------------------------------------------------------

  ALTER TABLE DIRECCION MODIFY (IDDIRECCION NOT NULL ENABLE);
  ALTER TABLE DIRECCION MODIFY (IDZONA NOT NULL ENABLE);
  ALTER TABLE DIRECCION MODIFY (IDCOLONIA NOT NULL ENABLE);
  ALTER TABLE DIRECCION MODIFY (IDMUNICIPIO NOT NULL ENABLE);
  ALTER TABLE DIRECCION ADD CONSTRAINT PK_DIRECCION PRIMARY KEY (IDDIRECCION)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table USUARIO
--------------------------------------------------------

  ALTER TABLE USUARIO MODIFY (IDUSUARIO NOT NULL ENABLE);
  ALTER TABLE USUARIO MODIFY (IDEMPLEADO NOT NULL ENABLE);
  ALTER TABLE USUARIO MODIFY (IDSUCURSAL NOT NULL ENABLE);
  ALTER TABLE USUARIO MODIFY (USUARIO NOT NULL ENABLE);
  ALTER TABLE USUARIO MODIFY (PW NOT NULL ENABLE);
  ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (IDUSUARIO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE USUARIO ADD UNIQUE (USUARIO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERSONA
--------------------------------------------------------

  ALTER TABLE PERSONA MODIFY (IDPERSONA NOT NULL ENABLE);
  ALTER TABLE PERSONA ADD UNIQUE (DPI)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE PERSONA ADD UNIQUE (NIT)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE PERSONA MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE PERSONA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE PERSONA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE PERSONA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE PERSONA ADD CONSTRAINT PERSONA_GENERO_CC CHECK (GENERO IN ('MASCULINO','FEMENINO')) ENABLE;
  ALTER TABLE PERSONA ADD CONSTRAINT PK_PERSONA PRIMARY KEY (IDPERSONA)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPARTAMENTO
--------------------------------------------------------

  ALTER TABLE DEPARTAMENTO MODIFY (IDDEPARTAMENTO NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (IDPAIS NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (DEPARTAMENTO NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE DEPARTAMENTO ADD CONSTRAINT PK_DEPARTAMENTO PRIMARY KEY (IDDEPARTAMENTO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
  ALTER TABLE DEPARTAMENTO ADD UNIQUE (DEPARTAMENTO)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Constraints for Table COLONIA
--------------------------------------------------------

  ALTER TABLE COLONIA MODIFY (IDCOLONIA NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (IDMUNICIPIO NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (COLONIA NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (CREADO NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (CREADO_POR NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (ACTUALIZADO NOT NULL ENABLE);
  ALTER TABLE COLONIA MODIFY (ACTUALIZADO_POR NOT NULL ENABLE);
  ALTER TABLE COLONIA ADD CONSTRAINT PK_COLONIA PRIMARY KEY (IDCOLONIA)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE USERS  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_REFERENCE_PERSONA FOREIGN KEY (IDPERSONA)
	  REFERENCES PERSONA (IDPERSONA) ENABLE;
  ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_REFERENCE_ESTADO FOREIGN KEY (IDESTADO)
	  REFERENCES ESTADO (IDESTADO) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COLONIA
--------------------------------------------------------

  ALTER TABLE COLONIA ADD CONSTRAINT FK_COLONIA_REFERENCE_MUNICIPI FOREIGN KEY (IDMUNICIPIO)
	  REFERENCES MUNICIPIO (IDMUNICIPIO) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEPARTAMENTO
--------------------------------------------------------

  ALTER TABLE DEPARTAMENTO ADD CONSTRAINT FK_DEPARTAM_REFERENCE_PAIS FOREIGN KEY (IDPAIS)
	  REFERENCES PAIS (IDPAIS) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIRECCION
--------------------------------------------------------

  ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIRECCIO_REFERENCE_COLONIA FOREIGN KEY (IDCOLONIA)
	  REFERENCES COLONIA (IDCOLONIA) ENABLE;
  ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIRECCIO_REFERENCE_MUNICIPI FOREIGN KEY (IDMUNICIPIO)
	  REFERENCES MUNICIPIO (IDMUNICIPIO) ENABLE;
  ALTER TABLE DIRECCION ADD CONSTRAINT FK_DIRECCIO_REFERENCE_ZONA FOREIGN KEY (IDZONA)
	  REFERENCES ZONA (IDZONA) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DIRECCION_PERSONA
--------------------------------------------------------

  ALTER TABLE DIRECCION_PERSONA ADD CONSTRAINT FK_DIRECCIO_REFERENCE_DIRECCIO FOREIGN KEY (IDDIRECCION)
	  REFERENCES DIRECCION (IDDIRECCION) ENABLE;
  ALTER TABLE DIRECCION_PERSONA ADD CONSTRAINT FK_DIRECCIO_REFERENCE_PERSONA FOREIGN KEY (IDPERSONA)
	  REFERENCES PERSONA (IDPERSONA) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE EMPLEADO ADD CONSTRAINT FK_EMPLEADO_REFERENCE_ESPECIAL FOREIGN KEY (IDESPECIALIDADES)
	  REFERENCES ESPECIALIDADES (IDESPECIALIDADES) ENABLE;
  ALTER TABLE EMPLEADO ADD CONSTRAINT FK_EMPLEADO_REFERENCE_ESTADO FOREIGN KEY (IDESTADO)
	  REFERENCES ESTADO (IDESTADO) ENABLE;
  ALTER TABLE EMPLEADO ADD CONSTRAINT FK_EMPLEADO_REFERENCE_PERSONA FOREIGN KEY (IDPERSONA)
	  REFERENCES PERSONA (IDPERSONA) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE FACTURA ADD CONSTRAINT FK_FACTURA_REFERENCE_VENTA FOREIGN KEY (IDVENTA)
	  REFERENCES VENTA (IDVENTA) ENABLE;
  ALTER TABLE FACTURA ADD CONSTRAINT FK_FACTURA_REFERENCE_MODO_PAG FOREIGN KEY (NO_PAGO)
	  REFERENCES MODO_PAGO (NO_PAGO) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MUNICIPIO
--------------------------------------------------------

  ALTER TABLE MUNICIPIO ADD CONSTRAINT FK_MUNICIPI_REFERENCE_DEPARTAM FOREIGN KEY (IDDEPARTAMENTO)
	  REFERENCES DEPARTAMENTO (IDDEPARTAMENTO) ENABLE;
  ALTER TABLE MUNICIPIO ADD CONSTRAINT FK_MUNICIPI_REFERENCE_PAIS FOREIGN KEY (IDPAIS)
	  REFERENCES PAIS (IDPAIS) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USUARIO
--------------------------------------------------------

  ALTER TABLE USUARIO ADD CONSTRAINT FK_USUARIO_REFERENCE_EMPLEADO FOREIGN KEY (IDEMPLEADO)
	  REFERENCES EMPLEADO (IDEMPLEADO) ENABLE;
  ALTER TABLE USUARIO ADD CONSTRAINT FK_USUARIO_REFERENCE_SUCURSAL FOREIGN KEY (IDSUCURSAL)
	  REFERENCES SUCURSAL (IDSUCURSAL) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VENTA
--------------------------------------------------------

  ALTER TABLE VENTA ADD CONSTRAINT FK_VENTA_REFERENCE_PRODUCTO FOREIGN KEY (IDPRODUCTO)
	  REFERENCES PRODUCTO (IDPRODUCTO) ENABLE;
  ALTER TABLE VENTA ADD CONSTRAINT FK_VENTA_REFERENCE_PROMOCIO FOREIGN KEY (IDPROMO)
	  REFERENCES PROMOCION (IDPROMO) ENABLE;
  ALTER TABLE VENTA ADD CONSTRAINT FK_VENTA_REFERENCE_CANAL FOREIGN KEY (IDCANAL)
	  REFERENCES CANAL (IDCANAL) ENABLE;
  ALTER TABLE VENTA ADD CONSTRAINT FK_VENTA_REFERENCE_CLIENTE FOREIGN KEY (IDCLIENTE)
	  REFERENCES CLIENTE (IDCLIENTE) ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ZONA
--------------------------------------------------------

  ALTER TABLE ZONA ADD CONSTRAINT FK_ZONA_REFERENCE_MUNICIPI FOREIGN KEY (IDMUNICIPIO)
	  REFERENCES MUNICIPIO (IDMUNICIPIO) ENABLE;

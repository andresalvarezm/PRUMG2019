CREATE TABLE  "ESTADO" 
   (	"IDESTADO" NUMBER(14,0) NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 UNIQUE ("ESTADO")
  USING INDEX  ENABLE, 
	 CONSTRAINT "PK_ESTADO" PRIMARY KEY ("IDESTADO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "PERSONA" 
   (	"IDPERSONA" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBRE1" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"NOMBRE2" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"NOMBRE3" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APELLIDO1" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APELLIDO2" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APECASADA" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"FECHA_NACIMIENTO" DATE, 
	"GENERO" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"TELEFONO" NUMBER(8,0), 
	"EMAIL" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"ESTADOCIVIL" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"DPI" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"NIT" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 UNIQUE ("DPI")
  USING INDEX  ENABLE, 
	 UNIQUE ("NIT")
  USING INDEX  ENABLE, 
	 CONSTRAINT "PERSONA_GENERO_CC" CHECK (GENERO IN ('MASCULINO','FEMENINO')) ENABLE, 
	 CONSTRAINT "PK_PERSONA" PRIMARY KEY ("IDPERSONA")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "CLIENTE" 
   (	"IDCLIENTE" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPERSONA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDESTADO" NUMBER(14,0), 
	 CONSTRAINT "PK_CLIENTE" PRIMARY KEY ("IDCLIENTE")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "CANAL" 
   (	"IDCANAL" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBRECANAL" VARCHAR2(255) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "CANAL_NOMBRECANAL_CC" CHECK (NOMBRECANAL IN ('DIRECTO','ENLINEA','TELEFONO')) ENABLE, 
	 CONSTRAINT "PK_CANAL" PRIMARY KEY ("IDCANAL")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "PROMOCION" 
   (	"IDPROMO" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBREPROMO" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CODIGO" VARCHAR2(10) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"FECHAINICIO" DATE NOT NULL ENABLE, 
	"FECHAFIN" DATE NOT NULL ENABLE, 
	"PORCEPROMO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_PROMOCION" PRIMARY KEY ("IDPROMO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "PRODUCTO" 
   (	"IDPRODUCTO" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBREPRODUCTO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"STOCK" NUMBER(14,0) NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(200) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"SKU" VARCHAR2(30) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"UNIDAD" VARCHAR2(20) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"PRECIOUNIDAD" NUMBER(14,2) NOT NULL ENABLE, 
	 CONSTRAINT "PK_PRODUCTO" PRIMARY KEY ("IDPRODUCTO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "VENTA" 
   (	"IDVENTA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPRODUCTO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPROMO" NUMBER(14,0), 
	"IDCANAL" NUMBER(14,0) NOT NULL ENABLE, 
	"IDCLIENTE" NUMBER(14,0) NOT NULL ENABLE, 
	"FECHAVENTA" DATE NOT NULL ENABLE, 
	"CANTIDAD" NUMBER(14,0) NOT NULL ENABLE, 
	"PRECIOUNIDAD" NUMBER(14,2) NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_VENTA" PRIMARY KEY ("IDVENTA")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "PAIS" 
   (	"IDPAIS" NUMBER(14,0) NOT NULL ENABLE, 
	"PAIS" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_PAIS" PRIMARY KEY ("IDPAIS")
  USING INDEX  ENABLE, 
	 UNIQUE ("PAIS")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "DEPARTAMENTO" 
   (	"IDDEPARTAMENTO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPAIS" NUMBER(14,0) NOT NULL ENABLE, 
	"DEPARTAMENTO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_DEPARTAMENTO" PRIMARY KEY ("IDDEPARTAMENTO")
  USING INDEX  ENABLE, 
	 UNIQUE ("DEPARTAMENTO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "MUNICIPIO" 
   (	"IDMUNICIPIO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDDEPARTAMENTO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPAIS" NUMBER(14,0) NOT NULL ENABLE, 
	"MUNICIPIO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_MUNICIPIO" PRIMARY KEY ("IDMUNICIPIO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "COLONIA" 
   (	"IDCOLONIA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDMUNICIPIO" NUMBER(14,0) NOT NULL ENABLE, 
	"COLONIA" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_COLONIA" PRIMARY KEY ("IDCOLONIA")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "ZONA" 
   (	"IDZONA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDMUNICIPIO" NUMBER(14,0) NOT NULL ENABLE, 
	"ZONA" NUMBER(5,0) NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_ZONA" PRIMARY KEY ("IDZONA")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "DIRECCION" 
   (	"IDDIRECCION" NUMBER(14,0) NOT NULL ENABLE, 
	"IDZONA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDCOLONIA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDMUNICIPIO" NUMBER(14,0) NOT NULL ENABLE, 
	"CALLE_AVENIDA" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"NUMERO" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"EDIFICIO" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "PK_DIRECCION" PRIMARY KEY ("IDDIRECCION")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "DIRECCION_PERSONA" 
   (	"IDPERSONA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDDIRECCION" NUMBER(14,0) NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "ESPECIALIDADES" 
   (	"IDESPECIALIDADES" NUMBER(14,0) NOT NULL ENABLE, 
	"ESPECIALIDADES" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 UNIQUE ("ESPECIALIDADES")
  USING INDEX  ENABLE, 
	 CONSTRAINT "PK_ESPECIALIDADES" PRIMARY KEY ("IDESPECIALIDADES")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "EMPLEADO" 
   (	"FECHAINGRESO" DATE NOT NULL ENABLE, 
	"IDEMPLEADO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDPERSONA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDESTADO" NUMBER(5,0) NOT NULL ENABLE, 
	"IDESPECIALIDADES" NUMBER(14,0), 
	"FECHASALIDA" DATE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_EMPLEADO" PRIMARY KEY ("IDEMPLEADO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "SUCURSAL" 
   (	"IDSUCURSAL" NUMBER(14,0) NOT NULL ENABLE, 
	"SUCURSAL" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_SUCURSAL" PRIMARY KEY ("IDSUCURSAL")
  USING INDEX  ENABLE, 
	 UNIQUE ("SUCURSAL")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "USUARIO" 
   (	"IDUSUARIO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDEMPLEADO" NUMBER(14,0) NOT NULL ENABLE, 
	"IDSUCURSAL" NUMBER(14,0) NOT NULL ENABLE, 
	"USUARIO" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"PW" VARCHAR2(50) COLLATE "USING_NLS_COMP" ENCRYPT USING 'AES192' 'SHA-1' NOT NULL ENABLE, 
	 CONSTRAINT "PK_USUARIO" PRIMARY KEY ("IDUSUARIO")
  USING INDEX  ENABLE, 
	 UNIQUE ("USUARIO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "MODO_PAGO" 
   (	"NO_PAGO" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBRE" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"OTRODETALLE" VARCHAR2(100) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_MODO_PAGO" PRIMARY KEY ("NO_PAGO")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "FACTURA" 
   (	"NOFACTURA" NUMBER(14,0) NOT NULL ENABLE, 
	"IDVENTA" NUMBER(14,0) NOT NULL ENABLE, 
	"NO_PAGO" NUMBER(14,0) NOT NULL ENABLE, 
	"FECHA" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	 CONSTRAINT "PK_FACTURA" PRIMARY KEY ("NOFACTURA")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "PERSONA_BKP" 
   (	"IDPERSONA" NUMBER(14,0) NOT NULL ENABLE, 
	"NOMBRE1" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"NOMBRE2" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"NOMBRE3" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APELLIDO1" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APELLIDO2" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"APECASADA" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"FECHA_NACIMIENTO" DATE, 
	"GENERO" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"TELEFONO" NUMBER(8,0), 
	"EMAIL" VARCHAR2(60) COLLATE "USING_NLS_COMP", 
	"ESTADOCIVIL" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"DPI" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"NIT" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"CREADO" DATE NOT NULL ENABLE, 
	"CREADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ACTUALIZADO" DATE NOT NULL ENABLE, 
	"ACTUALIZADO_POR" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "BITACORA" 
   (	"FECHA" DATE, 
	"USUARIO" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"NOMBRETABLA" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"LLAVE" VARCHAR2(30) COLLATE "USING_NLS_COMP", 
	"NOMBRECAMPO" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"VALORANTERIOR" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"VALORNUEVO" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"OBSERVACIONES" VARCHAR2(255) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
ALTER TABLE  "CLIENTE" ADD CONSTRAINT "FK_CLIENTE_REFERENCE_PERSONA" FOREIGN KEY ("IDPERSONA")
	  REFERENCES  "PERSONA" ("IDPERSONA") ENABLE
/
ALTER TABLE  "CLIENTE" ADD CONSTRAINT "FK_CLIENTE_REFERENCE_ESTADO" FOREIGN KEY ("IDESTADO")
	  REFERENCES  "ESTADO" ("IDESTADO") ENABLE
/
ALTER TABLE  "COLONIA" ADD CONSTRAINT "FK_COLONIA_REFERENCE_MUNICIPI" FOREIGN KEY ("IDMUNICIPIO")
	  REFERENCES  "MUNICIPIO" ("IDMUNICIPIO") ENABLE
/
ALTER TABLE  "DEPARTAMENTO" ADD CONSTRAINT "FK_DEPARTAM_REFERENCE_PAIS" FOREIGN KEY ("IDPAIS")
	  REFERENCES  "PAIS" ("IDPAIS") ENABLE
/
ALTER TABLE  "DIRECCION" ADD CONSTRAINT "FK_DIRECCIO_REFERENCE_COLONIA" FOREIGN KEY ("IDCOLONIA")
	  REFERENCES  "COLONIA" ("IDCOLONIA") ENABLE
/
ALTER TABLE  "DIRECCION" ADD CONSTRAINT "FK_DIRECCIO_REFERENCE_MUNICIPI" FOREIGN KEY ("IDMUNICIPIO")
	  REFERENCES  "MUNICIPIO" ("IDMUNICIPIO") ENABLE
/
ALTER TABLE  "DIRECCION" ADD CONSTRAINT "FK_DIRECCIO_REFERENCE_ZONA" FOREIGN KEY ("IDZONA")
	  REFERENCES  "ZONA" ("IDZONA") ENABLE
/
ALTER TABLE  "DIRECCION_PERSONA" ADD CONSTRAINT "FK_DIRECCIO_REFERENCE_DIRECCIO" FOREIGN KEY ("IDDIRECCION")
	  REFERENCES  "DIRECCION" ("IDDIRECCION") ENABLE
/
ALTER TABLE  "DIRECCION_PERSONA" ADD CONSTRAINT "FK_DIRECCIO_REFERENCE_PERSONA" FOREIGN KEY ("IDPERSONA")
	  REFERENCES  "PERSONA" ("IDPERSONA") ENABLE
/
ALTER TABLE  "EMPLEADO" ADD CONSTRAINT "FK_EMPLEADO_REFERENCE_ESPECIAL" FOREIGN KEY ("IDESPECIALIDADES")
	  REFERENCES  "ESPECIALIDADES" ("IDESPECIALIDADES") ENABLE
/
ALTER TABLE  "EMPLEADO" ADD CONSTRAINT "FK_EMPLEADO_REFERENCE_ESTADO" FOREIGN KEY ("IDESTADO")
	  REFERENCES  "ESTADO" ("IDESTADO") ENABLE
/
ALTER TABLE  "EMPLEADO" ADD CONSTRAINT "FK_EMPLEADO_REFERENCE_PERSONA" FOREIGN KEY ("IDPERSONA")
	  REFERENCES  "PERSONA" ("IDPERSONA") ENABLE
/
ALTER TABLE  "FACTURA" ADD CONSTRAINT "FK_FACTURA_REFERENCE_VENTA" FOREIGN KEY ("IDVENTA")
	  REFERENCES  "VENTA" ("IDVENTA") ENABLE
/
ALTER TABLE  "FACTURA" ADD CONSTRAINT "FK_FACTURA_REFERENCE_MODO_PAG" FOREIGN KEY ("NO_PAGO")
	  REFERENCES  "MODO_PAGO" ("NO_PAGO") ENABLE
/
ALTER TABLE  "MUNICIPIO" ADD CONSTRAINT "FK_MUNICIPI_REFERENCE_DEPARTAM" FOREIGN KEY ("IDDEPARTAMENTO")
	  REFERENCES  "DEPARTAMENTO" ("IDDEPARTAMENTO") ENABLE
/
ALTER TABLE  "MUNICIPIO" ADD CONSTRAINT "FK_MUNICIPI_REFERENCE_PAIS" FOREIGN KEY ("IDPAIS")
	  REFERENCES  "PAIS" ("IDPAIS") ENABLE
/
ALTER TABLE  "USUARIO" ADD CONSTRAINT "FK_USUARIO_REFERENCE_EMPLEADO" FOREIGN KEY ("IDEMPLEADO")
	  REFERENCES  "EMPLEADO" ("IDEMPLEADO") ENABLE
/
ALTER TABLE  "USUARIO" ADD CONSTRAINT "FK_USUARIO_REFERENCE_SUCURSAL" FOREIGN KEY ("IDSUCURSAL")
	  REFERENCES  "SUCURSAL" ("IDSUCURSAL") ENABLE
/
ALTER TABLE  "VENTA" ADD CONSTRAINT "FK_VENTA_REFERENCE_PRODUCTO" FOREIGN KEY ("IDPRODUCTO")
	  REFERENCES  "PRODUCTO" ("IDPRODUCTO") ENABLE
/
ALTER TABLE  "VENTA" ADD CONSTRAINT "FK_VENTA_REFERENCE_PROMOCIO" FOREIGN KEY ("IDPROMO")
	  REFERENCES  "PROMOCION" ("IDPROMO") ENABLE
/
ALTER TABLE  "VENTA" ADD CONSTRAINT "FK_VENTA_REFERENCE_CANAL" FOREIGN KEY ("IDCANAL")
	  REFERENCES  "CANAL" ("IDCANAL") ENABLE
/
ALTER TABLE  "VENTA" ADD CONSTRAINT "FK_VENTA_REFERENCE_CLIENTE" FOREIGN KEY ("IDCLIENTE")
	  REFERENCES  "CLIENTE" ("IDCLIENTE") ENABLE
/
ALTER TABLE  "ZONA" ADD CONSTRAINT "FK_ZONA_REFERENCE_MUNICIPI" FOREIGN KEY ("IDMUNICIPIO")
	  REFERENCES  "MUNICIPIO" ("IDMUNICIPIO") ENABLE
/
CREATE OR REPLACE EDITIONABLE FUNCTION  "AUTENTICACION_APLICACION" (
	p_username IN VARCHAR2,
	p_password IN VARCHAR2)
RETURN BOOLEAN IS
BEGIN
	FOR c1 IN (SELECT 1
		FROM USUARIO
		WHERE upper(USUARIO) = upper(p_username)
		AND upper(PW) = upper(p_password))
	LOOP
	RETURN TRUE;
	END LOOP;
RETURN FALSE;
END;
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION  "FB_DESCENCRIPTAR" ( TXT_DESENCRIP VARCHAR2 ) RETURN VARCHAR2 AS
     CRYPT_STR   VARCHAR(2000);
     KEY_ENCRIP  VARCHAR(255):='ASXRFGTR';
     L          NUMBER;
     CLE        RAW(8)    := UTL_RAW.CAST_TO_RAW(KEY_ENCRIP);
     CRYPT_RAW  RAW(2000) := UTL_RAW.CAST_TO_RAW(UTL_RAW.CAST_TO_VARCHAR2( TXT_DESENCRIP)) ;
BEGIN
      DBMS_OBFUSCATION_TOOLKIT.DESDECRYPT(
               INPUT          =>  TXT_DESENCRIP,
               KEY            =>  CLE,
               DECRYPTED_DATA =>  CRYPT_RAW );
      CRYPT_STR := UTL_RAW.CAST_TO_VARCHAR2(CRYPT_RAW);
      L := LENGTH(CRYPT_STR);
      CRYPT_STR := RPAD(CRYPT_STR,L-ASCII(SUBSTR(CRYPT_STR,L)));
      RETURN CRYPT_STR;
END FB_DESCENCRIPTAR;
/

CREATE OR REPLACE NONEDITIONABLE FUNCTION  "FB_ENCRIPTAR" ( TXT_ENCRIP VARCHAR2 ) RETURN RAW AS
      CRYPT_RAW   RAW(2000);
	  CRYPT_STR   VARCHAR(2000);
	  KEY_ENCRIP  VARCHAR(255):='ASXRFGTR';
	  L        INTEGER := LENGTH(TXT_ENCRIP);
      I        INTEGER;
      PADBLOCK RAW(2000);
      CLE      RAW(8)  := UTL_RAW.CAST_TO_RAW(KEY_ENCRIP);
BEGIN
      I := 8-MOD(L,8);
      PADBLOCK := UTL_RAW.CAST_TO_RAW(TXT_ENCRIP||RPAD(CHR(I),I,CHR(I)));
      DBMS_OBFUSCATION_TOOLKIT.DESENCRYPT(
               INPUT          => PADBLOCK,
               KEY            => CLE,
               ENCRYPTED_DATA => CRYPT_RAW );
      RETURN CRYPT_RAW ;
 END FB_ENCRIPTAR;
/

CREATE OR REPLACE EDITIONABLE FUNCTION  "CUSTOM_AUTH" (
	p_username IN VARCHAR2,
	p_password IN VARCHAR2)
RETURN BOOLEAN IS
BEGIN
	FOR c1 IN (SELECT 1
		FROM USUARIO
		WHERE upper(USUARIO) = upper(p_username)
		AND upper(PW) = upper(p_password))
	LOOP
	RETURN TRUE;
	END LOOP;
RETURN FALSE;
END;
/

CREATE UNIQUE INDEX  "PK_CANAL" ON  "CANAL" ("IDCANAL")
/
CREATE UNIQUE INDEX  "PK_CLIENTE" ON  "CLIENTE" ("IDCLIENTE")
/
CREATE UNIQUE INDEX  "PK_COLONIA" ON  "COLONIA" ("IDCOLONIA")
/
CREATE UNIQUE INDEX  "PK_DEPARTAMENTO" ON  "DEPARTAMENTO" ("IDDEPARTAMENTO")
/
CREATE UNIQUE INDEX  "PK_DIRECCION" ON  "DIRECCION" ("IDDIRECCION")
/
CREATE UNIQUE INDEX  "PK_EMPLEADO" ON  "EMPLEADO" ("IDEMPLEADO")
/
CREATE UNIQUE INDEX  "PK_ESPECIALIDADES" ON  "ESPECIALIDADES" ("IDESPECIALIDADES")
/
CREATE UNIQUE INDEX  "PK_ESTADO" ON  "ESTADO" ("IDESTADO")
/
CREATE UNIQUE INDEX  "PK_FACTURA" ON  "FACTURA" ("NOFACTURA")
/
CREATE UNIQUE INDEX  "PK_MODO_PAGO" ON  "MODO_PAGO" ("NO_PAGO")
/
CREATE UNIQUE INDEX  "PK_MUNICIPIO" ON  "MUNICIPIO" ("IDMUNICIPIO")
/
CREATE UNIQUE INDEX  "PK_PAIS" ON  "PAIS" ("IDPAIS")
/
CREATE UNIQUE INDEX  "PK_PERSONA" ON  "PERSONA" ("IDPERSONA")
/
CREATE UNIQUE INDEX  "PK_PRODUCTO" ON  "PRODUCTO" ("IDPRODUCTO")
/
CREATE UNIQUE INDEX  "PK_PROMOCION" ON  "PROMOCION" ("IDPROMO")
/
CREATE UNIQUE INDEX  "PK_SUCURSAL" ON  "SUCURSAL" ("IDSUCURSAL")
/
CREATE UNIQUE INDEX  "PK_USUARIO" ON  "USUARIO" ("IDUSUARIO")
/
CREATE UNIQUE INDEX  "PK_VENTA" ON  "VENTA" ("IDVENTA")
/
CREATE UNIQUE INDEX  "PK_ZONA" ON  "ZONA" ("IDZONA")
/
CREATE UNIQUE INDEX  "SYS_C0012103" ON  "ESTADO" ("ESTADO")
/
CREATE UNIQUE INDEX  "SYS_C0012130" ON  "PAIS" ("PAIS")
/
CREATE UNIQUE INDEX  "SYS_C0012147" ON  "ESPECIALIDADES" ("ESPECIALIDADES")
/
CREATE UNIQUE INDEX  "SYS_C0012162" ON  "SUCURSAL" ("SUCURSAL")
/
CREATE UNIQUE INDEX  "SYS_C0012232" ON  "USUARIO" ("USUARIO")
/
CREATE UNIQUE INDEX  "SYS_C0012234" ON  "PERSONA" ("DPI")
/
CREATE UNIQUE INDEX  "SYS_C0012235" ON  "PERSONA" ("NIT")
/
CREATE UNIQUE INDEX  "SYS_C0012250" ON  "DEPARTAMENTO" ("DEPARTAMENTO")
/
CREATE OR REPLACE EDITIONABLE PACKAGE  "PK_AUTENTICACION" AS
  FUNCTION FB_AUTENTICACION_APLICACION(
	p_username IN VARCHAR2,
	p_password IN VARCHAR2)
RETURN BOOLEAN;
END PK_AUTENTICACION;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY  "PK_AUTENTICACION" AS
	FUNCTION FB_AUTENTICACION_APLICACION (
	p_username IN VARCHAR2,
	p_password IN VARCHAR2)
RETURN BOOLEAN IS
BEGIN
	FOR c1 IN (SELECT 1
		FROM USUARIO
		WHERE upper(USUARIO) = upper(p_username)
		AND upper(PW) = upper(p_password))
	LOOP
	RETURN TRUE;
	END LOOP;
RETURN FALSE;
END;
END PK_AUTENTICACION;
/

CREATE OR REPLACE NONEDITIONABLE PACKAGE  "PK_SEGURIDAD" IS
  FUNCTION FB_DESCENCRIPTAR( TXT_DESENCRIP VARCHAR2 ) RETURN VARCHAR2;
  FUNCTION FB_ENCRIPTAR( TXT_ENCRIP VARCHAR2 ) RETURN RAW;
END PK_SEGURIDAD;
/
CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY  "PK_SEGURIDAD" AS
------------------------------------------------------------------------
--  DDL QUE PERMITE CREAR FUNCION QUE ENCRIPTA (METODO RAW) COLUMNAS
------------------------------------------------------------------------
	FUNCTION FB_ENCRIPTAR( TXT_ENCRIP VARCHAR2 ) RETURN RAW AS
		CRYPT_RAW   RAW(2000);
		CRYPT_STR   VARCHAR(2000);
		KEY_ENCRIP  VARCHAR(255):='ASXRFGTR';
		L        INTEGER := LENGTH(TXT_ENCRIP);
		I        INTEGER;
		PADBLOCK RAW(2000);
		CLE      RAW(8)  := UTL_RAW.CAST_TO_RAW(KEY_ENCRIP);
	BEGIN
		I := 8-MOD(L,8);
		PADBLOCK := UTL_RAW.CAST_TO_RAW(TXT_ENCRIP||RPAD(CHR(I),I,CHR(I)));
		DBMS_OBFUSCATION_TOOLKIT.DESENCRYPT(
               INPUT          => PADBLOCK,
               KEY            => CLE,
               ENCRYPTED_DATA => CRYPT_RAW );
	RETURN CRYPT_RAW;
 END FB_ENCRIPTAR;
 
-------------------------------------------------------------------------
--  DDL QUE PERMITE CREAR FUNCION QUE DESCENCRIPTAR (METODO RAW) COLUMNAS
-------------------------------------------------------------------------
	FUNCTION FB_DESCENCRIPTAR( TXT_DESENCRIP VARCHAR2 ) RETURN VARCHAR2 AS
		CRYPT_STR   VARCHAR(2000);
		KEY_ENCRIP  VARCHAR(255):='ASXRFGTR';
		L          NUMBER;
		CLE        RAW(8)    := UTL_RAW.CAST_TO_RAW(KEY_ENCRIP);
		CRYPT_RAW  RAW(2000) := UTL_RAW.CAST_TO_RAW(UTL_RAW.CAST_TO_VARCHAR2( TXT_DESENCRIP)) ;
	BEGIN
		DBMS_OBFUSCATION_TOOLKIT.DESDECRYPT(
               INPUT          =>  TXT_DESENCRIP,
               KEY            =>  CLE,
               DECRYPTED_DATA =>  CRYPT_RAW );
		CRYPT_STR := UTL_RAW.CAST_TO_VARCHAR2(CRYPT_RAW);
			L := LENGTH(CRYPT_STR);
			CRYPT_STR := RPAD(CRYPT_STR,L-ASCII(SUBSTR(CRYPT_STR,L)));
    RETURN CRYPT_STR;
END FB_DESCENCRIPTAR; 
END PK_SEGURIDAD;
/

CREATE OR REPLACE NONEDITIONABLE PROCEDURE  "PRC_BITACORA" (PNOMBRETABLA IN VARCHAR2, PLLAVE IN VARCHAR2, PNOMBRECAMPO IN VARCHAR2, PVALORANTERIOR IN VARCHAR2, PVALORNUEVO IN VARCHAR2, POBSERVACIONES IN VARCHAR2) IS 
PRAGMA AUTONOMOUS_TRANSACTION; 
BEGIN 
	BEGIN 
		INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
		VALUES (SYSDATE, USER, PNOMBRETABLA, PLLAVE, PNOMBRECAMPO, PVALORANTERIOR, PVALORNUEVO, POBSERVACIONES); 
		COMMIT; 
		EXCEPTION 
			WHEN OTHERS THEN 
				ROLLBACK; 
		END; 
END; 
 
/

 CREATE SEQUENCE   "SEQ_IDCANAL"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDCLIENTE"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDCOLONIA"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDDEPARTAMENTO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDEMPLEADO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDESPECIALIDADES"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDESTADO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDMUNICIPIO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDPAIS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDPERSONA"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDPRODUCTO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDPROMO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDSUCURSAL"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDUSUARIO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDVENTA"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDZONA"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_NOFACTURA"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_NO_PAGO"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "SEQ_IDDIRECCION"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_AIR_ACTUALIZASTOCK" 
AFTER INSERT ON VENTA 
FOR EACH ROW 
BEGIN 
UPDATE PRODUCTO 
SET STOCK = STOCK - :NEW.CANTIDAD 
WHERE IDPRODUCTO = :NEW.IDPRODUCTO; 
END; 

/
ALTER TRIGGER  "TRG_AIR_ACTUALIZASTOCK" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_VENTA" 
BEFORE DELETE ON VENTA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPRODUCTO', :OLD.IDPRODUCTO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPROMO', :OLD.IDPROMO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCANAL', :OLD.IDCANAL, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCLIENTE', :OLD.IDCLIENTE, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'FECHAVENTA', :OLD.FECHAVENTA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'CANTIDAD', :OLD.CANTIDAD, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_VENTA; 

/
ALTER TRIGGER  "TRG_BDR_VENTA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_VENTA" 
BEFORE INSERT ON  "VENTA"
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
    DECLARE
    NSTOCK NUMBER;
    BEGIN
		BEGIN
			SELECT STOCK
				INTO NSTOCK
				FROM PRODUCTO 
				WHERE IDPRODUCTO = :NEW.IDPRODUCTO;
    EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NSTOCK := 0;
			WHEN TOO_MANY_ROWS THEN
				NSTOCK :=0;
		END;
		IF NSTOCK < :NEW.CANTIDAD THEN
			PRC_BITACORA('PRODUCTO', :NEW.IDPRODUCTO, 'IDPRODUCTO', NSTOCK, :NEW.CANTIDAD, 'NO HAY SUFICIENTE PRODUCTO PARA LA VENTA ' ||:NEW.IDPRODUCTO	); 
			RAISE_APPLICATION_ERROR(-20001, 'NO HAY SUFICIENTE PRODUCTO PARA LA VENTA');
		END IF;
    END;
END TRG_BIR_VENTA;
/
ALTER TRIGGER  "TRG_BIR_VENTA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_VENTA_S" 
BEFORE INSERT ON VENTA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDVENTA>> 
  BEGIN 
    IF INSERTING AND :NEW.IDVENTA IS NULL THEN 
      SELECT SEQ_IDVENTA.NEXTVAL INTO :NEW.IDVENTA FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_VENTA_S; 

/
ALTER TRIGGER  "TRG_BIR_VENTA_S" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_PERSONA" 
BEFORE DELETE ON PERSONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE1', :OLD.NOMBRE1, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE2', :OLD.NOMBRE2, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE3', :OLD.NOMBRE3, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO1', :OLD.APELLIDO1, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO2', :OLD.APELLIDO2, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APECASADA', :OLD.APECASADA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'FECHA_NACIMIENTO', :OLD.FECHA_NACIMIENTO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'GENERO', :OLD.GENERO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'TELEFONO', :OLD.TELEFONO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'EMAIL', :OLD.EMAIL, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'ESTADOCIVIL', :OLD.ESTADOCIVIL, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'DPI', :OLD.DPI, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_PERSONA; 

/
ALTER TRIGGER  "TRG_BDR_PERSONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_PERSONA" 
BEFORE INSERT ON PERSONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPERSONA>> 
  BEGIN 
    IF INSERTING AND :NEW.IDPERSONA IS NULL THEN 
      SELECT SEQ_IDPERSONA.NEXTVAL INTO :NEW.IDPERSONA FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_PERSONA; 

/
ALTER TRIGGER  "TRG_BIR_PERSONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_PERSONA" 
BEFORE INSERT OR UPDATE ON PERSONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_PERSONA; 

/
ALTER TRIGGER  "TRG_BIU_PERSONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_VENTA" 
BEFORE INSERT OR UPDATE ON VENTA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_VENTA; 

/
ALTER TRIGGER  "TRG_BIU_VENTA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_VENTA" 
BEFORE UPDATE ON VENTA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPRODUCTO', :OLD.IDPRODUCTO, :NEW.IDPRODUCTO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDPROMO', :OLD.IDPROMO, :NEW.IDPROMO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCANAL', :OLD.IDCANAL, :NEW.IDCANAL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'IDCLIENTE', :OLD.IDCLIENTE, :NEW.IDCLIENTE); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'FECHAVENTA', :OLD.FECHAVENTA, :NEW.FECHAVENTA); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'CANTIDAD', :OLD.CANTIDAD, :NEW.CANTIDAD); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'VENTA', :OLD.IDVENTA, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, :NEW.PRECIOUNIDAD); 
 
END TRG_BUR_VENTA; 

/
ALTER TRIGGER  "TRG_BUR_VENTA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_ZONA" 
BEFORE DELETE ON ZONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'ZONA', :OLD.ZONA, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_ZONA; 

/
ALTER TRIGGER  "TRG_BDR_ZONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_ZONA" 
BEFORE INSERT ON ZONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDZONA>> 
  BEGIN 
    IF INSERTING AND :NEW.IDZONA IS NULL THEN 
      SELECT SEQ_IDZONA.NEXTVAL INTO :NEW.IDZONA FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_ZONA; 

/
ALTER TRIGGER  "TRG_BIR_ZONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_ZONA" 
BEFORE INSERT OR UPDATE ON ZONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_ZONA; 

/
ALTER TRIGGER  "TRG_BIU_ZONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_ZONA" 
BEFORE UPDATE ON ZONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, :NEW.IDMUNICIPIO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'ZONA', :OLD.IDZONA, 'ZONA', :OLD.ZONA, :NEW.ZONA);	 
END TRG_BUR_ZONA; 

/
ALTER TRIGGER  "TRG_BUR_ZONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_DEPARTAMENTO" 
BEFORE DELETE ON DEPARTAMENTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, NULL, 'VALOR ELIMINADO'); 
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO');	 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'DEPARTAMENTO', :OLD.DEPARTAMENTO, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_DEPARTAMENTO; 

/
ALTER TRIGGER  "TRG_BDR_DEPARTAMENTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_CANAL" 
BEFORE INSERT ON CANAL  
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDCANAL>> 
  BEGIN 
    IF INSERTING AND :NEW.IDCANAL IS NULL THEN 
      SELECT SEQ_IDCANAL.NEXTVAL INTO :NEW.IDCANAL FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END; 

/
ALTER TRIGGER  "TRG_BIR_CANAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_CANAL" 
BEFORE DELETE ON CANAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'IDCANAL', :OLD.IDCANAL, NULL, 'VALOR ELIMINADO'); 
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'NOMBRECANAL', :OLD.NOMBRECANAL, NULL, 'VALOR ELIMINADO');	 
END TRG_BDR_CANAL; 

/
ALTER TRIGGER  "TRG_BDR_CANAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_CANAL" 
BEFORE INSERT OR UPDATE ON CANAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_CANAL; 

/
ALTER TRIGGER  "TRG_BIU_CANAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_CANAL" 
BEFORE UPDATE ON CANAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'CANAL', :OLD.IDCANAL, 'NOMBRECANAL', :OLD.NOMBRECANAL, :NEW.NOMBRECANAL); 
END TRG_BUR_CANAL; 

/
ALTER TRIGGER  "TRG_BUR_CANAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_CLIENTE" 
BEFORE DELETE ON CLIENTE 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDCLIENTE', :OLD.IDCLIENTE, NULL, 'VALOR ELIMINADO'); 
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDPERSONA', :OLD.IDPERSONA, NULL, 'VALOR ELIMINADO');	 
END TRG_BDR_CLIENTE; 

/
ALTER TRIGGER  "TRG_BDR_CLIENTE" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_CLIENTE" 
BEFORE INSERT ON CLIENTE 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDCLIENTE>> 
  BEGIN 
    IF INSERTING AND :NEW.IDCLIENTE IS NULL THEN 
      SELECT SEQ_IDCLIENTE.NEXTVAL INTO :NEW.IDCLIENTE FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_CLIENTE; 

/
ALTER TRIGGER  "TRG_BIR_CLIENTE" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_CLIENTE" 
BEFORE UPDATE ON CLIENTE 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'CLIENTE', :OLD.IDCLIENTE, 'IDPERSONA', :OLD.IDPERSONA, :NEW.IDPERSONA); 
END TRG_BUR_CLIENTE; 

/
ALTER TRIGGER  "TRG_BUR_CLIENTE" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_COLONIA" 
BEFORE DELETE ON COLONIA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'IDCOLONIA', :OLD.IDCOLONIA, NULL, 'VALOR ELIMINADO'); 
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO');	 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'COLONIA', :OLD.COLONIA, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_COLONIA; 

/
ALTER TRIGGER  "TRG_BDR_COLONIA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_COLONIA" 
BEFORE INSERT ON COLONIA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDCOLONIA>> 
  BEGIN 
    IF INSERTING AND :NEW.IDCOLONIA IS NULL THEN 
      SELECT SEQ_IDCOLONIA.NEXTVAL INTO :NEW.IDCOLONIA FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END; 

/
ALTER TRIGGER  "TRG_BIR_COLONIA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_COLONIA" 
BEFORE INSERT OR UPDATE ON COLONIA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_COLONIA; 

/
ALTER TRIGGER  "TRG_BIU_COLONIA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_COLONIA" 
BEFORE UPDATE ON COLONIA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'COLONIA', :OLD.IDCOLONIA, 'COLONIA', :OLD.COLONIA, :NEW.COLONIA); 
END TRG_BUR_COLONIA; 

/
ALTER TRIGGER  "TRG_BUR_COLONIA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_DEPARTAMENTO" 
BEFORE INSERT ON DEPARTAMENTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDDEPARTAMENTO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDDEPARTAMENTO IS NULL THEN 
      SELECT SEQ_IDDEPARTAMENTO.NEXTVAL INTO :NEW.IDDEPARTAMENTO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_DEPARTAMENTO; 

/
ALTER TRIGGER  "TRG_BIR_DEPARTAMENTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_DEPARTAMENTO" 
BEFORE INSERT OR UPDATE ON DEPARTAMENTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_DEPARTAMENTO; 

/
ALTER TRIGGER  "TRG_BIU_DEPARTAMENTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_DEPARTAMENTO" 
BEFORE UPDATE ON DEPARTAMENTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'DEPARTAMENTO', :OLD.IDDEPARTAMENTO, 'DEPARTAMENTO', :OLD.DEPARTAMENTO, :NEW.DEPARTAMENTO); 
END TRG_BUR_DEPARTAMENTO; 

/
ALTER TRIGGER  "TRG_BUR_DEPARTAMENTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_DIRECCION" 
BEFORE DELETE ON DIRECCION 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDDIRECCION', :OLD.IDDIRECCION, NULL, 'VALOR ELIMINADO'); 
    INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDZONA', :OLD.IDZONA, NULL, 'VALOR ELIMINADO');	 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDCOLONIA', :OLD.IDCOLONIA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'CALLE_AVENIDA', :OLD.CALLE_AVENIDA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'NUMERO', :OLD.NUMERO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
    VALUES (SYSDATE, USER, 'DIRECCION', :OLD.IDDIRECCION, 'EDIFICIO', :OLD.EDIFICIO, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_DIRECCION; 

/
ALTER TRIGGER  "TRG_BDR_DIRECCION" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_EMPLEADO" 
BEFORE DELETE ON EMPLEADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHAINGRESO', :OLD.FECHAINGRESO, NULL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDPERSONA', :OLD.IDPERSONA, NULL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESTADO', :OLD.IDESTADO, NULL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, NULL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHASALIDA', :OLD.FECHASALIDA, NULL);	 
END TRG_BDR_EMPLEADO; 

/
ALTER TRIGGER  "TRG_BDR_EMPLEADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_EMPLEADO" 
BEFORE INSERT ON EMPLEADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDEMPLEADO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDEMPLEADO IS NULL THEN 
      SELECT SEQ_IDEMPLEADO.NEXTVAL INTO :NEW.IDEMPLEADO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_EMPLEADO; 

/
ALTER TRIGGER  "TRG_BIR_EMPLEADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_EMPLEADO" 
BEFORE INSERT OR UPDATE ON EMPLEADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_EMPLEADO; 

/
ALTER TRIGGER  "TRG_BIU_EMPLEADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_EMPLEADO" 
BEFORE UPDATE ON EMPLEADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHAINGRESO', :OLD.FECHAINGRESO, :NEW.FECHAINGRESO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDPERSONA', :OLD.IDPERSONA, :NEW.IDPERSONA); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESTADO', :OLD.IDESTADO, :NEW.IDESTADO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, :NEW.IDESPECIALIDADES); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'EMPLEADO', :OLD.IDEMPLEADO, 'FECHASALIDA', :OLD.FECHASALIDA, :NEW.FECHASALIDA);	 
END TRG_BUR_EMPLEADO; 

/
ALTER TRIGGER  "TRG_BUR_EMPLEADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_ESPECIALIDADES" 
BEFORE DELETE ON ESPECIALIDADES 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'IDESPECIALIDADES', :OLD.IDESPECIALIDADES, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'ESPECIALIDADES', :OLD.ESPECIALIDADES, NULL, 'VALOR ELIMINADO');	 
END TRG_BDR_ESPECIALIDADES; 

/
ALTER TRIGGER  "TRG_BDR_ESPECIALIDADES" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_ESPECIALIDADES" 
BEFORE INSERT ON ESPECIALIDADES 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDESPECIALIDADES>> 
  BEGIN 
    IF INSERTING AND :NEW.IDESPECIALIDADES IS NULL THEN 
      SELECT SEQ_IDESPECIALIDADES.NEXTVAL INTO :NEW.IDESPECIALIDADES FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_ESPECIALIDADES; 

/
ALTER TRIGGER  "TRG_BIR_ESPECIALIDADES" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_ESPECIALIDADES" 
BEFORE INSERT OR UPDATE ON ESPECIALIDADES 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_ESPECIALIDADES; 

/
ALTER TRIGGER  "TRG_BIU_ESPECIALIDADES" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_ESPECIALIDADES" 
BEFORE UPDATE ON ESPECIALIDADES 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'ESPECIALIDADES', :OLD.IDESPECIALIDADES, 'ESPECIALIDADES', :OLD.ESPECIALIDADES, :NEW.ESPECIALIDADES); 
END TRG_BUR_ESPECIALIDADES; 

/
ALTER TRIGGER  "TRG_BUR_ESPECIALIDADES" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_ESTADO" 
BEFORE DELETE ON ESTADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'IDESTADO', :OLD.IDESTADO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'ESTADO', :OLD.ESTADO, NULL, 'VALOR ELIMINADO');	 
END TRG_BDR_ESTADO; 

/
ALTER TRIGGER  "TRG_BDR_ESTADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_ESTADO" 
BEFORE INSERT ON ESTADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDESTADO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDESTADO IS NULL THEN 
      SELECT SEQ_IDESTADO.NEXTVAL INTO :NEW.IDESTADO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_ESTADO; 

/
ALTER TRIGGER  "TRG_BIR_ESTADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_ESTADO" 
BEFORE INSERT OR UPDATE ON ESTADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_ESTADO; 

/
ALTER TRIGGER  "TRG_BIU_ESTADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_ESTADO" 
BEFORE UPDATE ON ESTADO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'ESTADO', :OLD.IDESTADO, 'ESTADO', :OLD.ESTADO, :NEW.ESTADO); 
END TRG_BUR_ESTADO; 

/
ALTER TRIGGER  "TRG_BUR_ESTADO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_FACTURA" 
BEFORE DELETE ON FACTURA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NOFACTURA', :OLD.NOFACTURA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'IDVENTA', :OLD.IDVENTA, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NO_PAGO', :OLD.NO_PAGO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'FECHA', :OLD.FECHA, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_FACTURA; 

/
ALTER TRIGGER  "TRG_BDR_FACTURA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_FACTURA" 
BEFORE INSERT ON FACTURA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDFACTURA>> 
  BEGIN 
    IF INSERTING AND :NEW.NOFACTURA IS NULL THEN 
      SELECT SEQ_NOFACTURA.NEXTVAL INTO :NEW.NOFACTURA FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_FACTURA; 

/
ALTER TRIGGER  "TRG_BIR_FACTURA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_FACTURA" 
BEFORE INSERT OR UPDATE ON FACTURA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_FACTURA; 

/
ALTER TRIGGER  "TRG_BIU_FACTURA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_FACTURA" 
BEFORE UPDATE ON FACTURA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'IDVENTA', :OLD.IDVENTA, :NEW.IDVENTA); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'NO_PAGO', :OLD.NO_PAGO, :NEW.NO_PAGO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'FACTURA', :OLD.NOFACTURA, 'FECHA', :OLD.FECHA, :NEW.FECHA);	 
END TRG_BUR_FACTURA; 

/
ALTER TRIGGER  "TRG_BUR_FACTURA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_MODO_PAGO" 
BEFORE DELETE ON MODO_PAGO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NO_PAGO', :OLD.NO_PAGO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NOMBRE', :OLD.NOMBRE, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'OTRODETALLE', :OLD.OTRODETALLE, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_MODO_PAGO; 

/
ALTER TRIGGER  "TRG_BDR_MODO_PAGO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_MODO_PAGO" 
BEFORE INSERT ON MODO_PAGO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDMODO_PAGO>> 
  BEGIN 
    IF INSERTING AND :NEW.NO_PAGO IS NULL THEN 
      SELECT SEQ_NO_PAGO.NEXTVAL INTO :NEW.NO_PAGO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_MODO_PAGO; 

/
ALTER TRIGGER  "TRG_BIR_MODO_PAGO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_MODO_PAGO" 
BEFORE UPDATE ON MODO_PAGO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'NOMBRE', :OLD.NOMBRE, :NEW.NOMBRE); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'MODO_PAGO', :OLD.NO_PAGO, 'OTRODETALLE', :OLD.OTRODETALLE, :NEW.OTRODETALLE); 
END TRG_BUR_MODO_PAGO; 

/
ALTER TRIGGER  "TRG_BUR_MODO_PAGO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_MUNICIPIO" 
BEFORE DELETE ON MUNICIPIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDMUNICIPIO', :OLD.IDMUNICIPIO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'MUNICIPIO', :OLD.MUNICIPIO, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_MUNICIPIO; 

/
ALTER TRIGGER  "TRG_BDR_MUNICIPIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_MUNICIPIO" 
BEFORE INSERT ON MUNICIPIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDMUNICIPIO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDMUNICIPIO IS NULL THEN 
      SELECT SEQ_IDMUNICIPIO.NEXTVAL INTO :NEW.IDMUNICIPIO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_MUNICIPIO; 

/
ALTER TRIGGER  "TRG_BIR_MUNICIPIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_MUNICIPIO" 
BEFORE INSERT OR UPDATE ON MUNICIPIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_MUNICIPIO; 

/
ALTER TRIGGER  "TRG_BIU_MUNICIPIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_MUNICIPIO" 
BEFORE UPDATE ON MUNICIPIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDDEPARTAMENTO', :OLD.IDDEPARTAMENTO, :NEW.IDDEPARTAMENTO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'IDPAIS', :OLD.IDPAIS, :NEW.IDPAIS); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'MUNICIPIO', :OLD.IDMUNICIPIO, 'MUNICIPIO', :OLD.MUNICIPIO, :NEW.MUNICIPIO); 
END TRG_BUR_MUNICIPIO; 

/
ALTER TRIGGER  "TRG_BUR_MUNICIPIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_PAIS" 
BEFORE DELETE ON PAIS 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'IDPAIS', :OLD.IDPAIS, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'PAIS', :OLD.PAIS, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_PAIS; 

/
ALTER TRIGGER  "TRG_BDR_PAIS" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_PAIS" 
BEFORE INSERT ON PAIS 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPAIS>> 
  BEGIN 
    IF INSERTING AND :NEW.IDPAIS IS NULL THEN 
      SELECT SEQ_IDPAIS.NEXTVAL INTO :NEW.IDPAIS FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_PAIS; 

/
ALTER TRIGGER  "TRG_BIR_PAIS" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_PAIS" 
BEFORE INSERT OR UPDATE ON PAIS 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_PAIS; 

/
ALTER TRIGGER  "TRG_BIU_PAIS" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_PAIS" 
BEFORE UPDATE ON PAIS 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PAIS', :OLD.IDPAIS, 'PAIS', :OLD.PAIS, :NEW.PAIS); 
END TRG_BUR_PAIS; 

/
ALTER TRIGGER  "TRG_BUR_PAIS" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_PERSONA" 
BEFORE UPDATE ON PERSONA 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE1', :OLD.NOMBRE1, :NEW.NOMBRE1); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE2', :OLD.NOMBRE2, :NEW.NOMBRE2); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'NOMBRE3', :OLD.NOMBRE3, :NEW.NOMBRE3); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO1', :OLD.APELLIDO1, :NEW.APELLIDO1); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APELLIDO2', :OLD.APELLIDO2, :NEW.APELLIDO2); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'APECASADA', :OLD.APECASADA, :NEW.APECASADA); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'FECHA_NACIMIENTO', :OLD.FECHA_NACIMIENTO, :NEW.FECHA_NACIMIENTO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'GENERO', :OLD.GENERO, :NEW.GENERO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'TELEFONO', :OLD.TELEFONO, :NEW.TELEFONO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'EMAIL', :OLD.EMAIL, :NEW.EMAIL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'ESTADOCIVIL', :OLD.ESTADOCIVIL, :NEW.ESTADOCIVIL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PERSONA', :OLD.IDPERSONA, 'DPI', :OLD.DPI, :NEW.DPI); 
END TRG_BUR_PERSONA; 

/
ALTER TRIGGER  "TRG_BUR_PERSONA" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_PRODUCTO" 
BEFORE DELETE ON PRODUCTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'NOMBREPRODUCTO', :OLD.NOMBREPRODUCTO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'STOCK', :OLD.STOCK, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'DESCRIPCION', :OLD.DESCRIPCION, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'SKU', :OLD.SKU, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'UNIDAD', :OLD.UNIDAD, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_PRODUCTO; 

/
ALTER TRIGGER  "TRG_BDR_PRODUCTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_PRODUCTO" 
BEFORE INSERT ON PRODUCTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPRODUCTO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDPRODUCTO IS NULL THEN 
      SELECT SEQ_IDPRODUCTO.NEXTVAL INTO :NEW.IDPRODUCTO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_PRODUCTO; 

/
ALTER TRIGGER  "TRG_BIR_PRODUCTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_PRODUCTO" 
BEFORE UPDATE ON PRODUCTO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'NOMBREPRODUCTO', :OLD.NOMBREPRODUCTO, :NEW.NOMBREPRODUCTO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'STOCK', :OLD.STOCK, :NEW.STOCK); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'DESCRIPCION', :OLD.DESCRIPCION, :NEW.DESCRIPCION); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'SKU', :OLD.SKU, :NEW.SKU); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'UNIDAD', :OLD.UNIDAD, :NEW.UNIDAD); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PRODUCTO', :OLD.IDPRODUCTO, 'PRECIOUNIDAD', :OLD.PRECIOUNIDAD, :NEW.PRECIOUNIDAD); 
END TRG_BUR_PRODUCTO; 

/
ALTER TRIGGER  "TRG_BUR_PRODUCTO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_PROMOCION" 
BEFORE DELETE ON PROMOCION 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'NOMBREPROMO', :OLD.NOMBREPROMO,  NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'CODIGO', :OLD.CODIGO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAINICIO', :OLD.FECHAINICIO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAFIN', :OLD.FECHAFIN, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'PORCEPROMO', :OLD.PORCEPROMO, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_PROMOCION; 

/
ALTER TRIGGER  "TRG_BDR_PROMOCION" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_PROMOCION" 
BEFORE INSERT ON PROMOCION 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPROMO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDPROMO IS NULL THEN 
      SELECT SEQ_IDPROMO.NEXTVAL INTO :NEW.IDPROMO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_PROMOCION; 

/
ALTER TRIGGER  "TRG_BIR_PROMOCION" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_PROMOCION" 
BEFORE INSERT OR UPDATE ON PROMOCION 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_PROMOCION; 

/
ALTER TRIGGER  "TRG_BIU_PROMOCION" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_PROMOCION" 
BEFORE UPDATE ON PROMOCION 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'NOMBREPROMO', :OLD.NOMBREPROMO, :NEW.NOMBREPROMO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'CODIGO', :OLD.CODIGO, :NEW.CODIGO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAINICIO', :OLD.FECHAINICIO, :NEW.FECHAINICIO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'FECHAFIN', :OLD.FECHAFIN, :NEW.FECHAFIN); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'PROMOCION', :OLD.IDPROMO, 'PORCEPROMO', :OLD.PORCEPROMO, :NEW.PORCEPROMO); 
END TRG_BUR_PROMOCION; 

/
ALTER TRIGGER  "TRG_BUR_PROMOCION" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_SUCURSAL" 
BEFORE DELETE ON SUCURSAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'IDSUCURSAL', :OLD.IDSUCURSAL,  NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'SUCURSAL', :OLD.SUCURSAL, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_SUCURSAL; 

/
ALTER TRIGGER  "TRG_BDR_SUCURSAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_SUCURSAL" 
BEFORE INSERT ON SUCURSAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPROMO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDSUCURSAL IS NULL THEN 
      SELECT SEQ_IDSUCURSAL.NEXTVAL INTO :NEW.IDSUCURSAL FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_SUCURSAL; 

/
ALTER TRIGGER  "TRG_BIR_SUCURSAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIU_SUCURSAL" 
BEFORE INSERT OR UPDATE ON SUCURSAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
    IF INSERTING THEN 
		:NEW.CREADO := SYSDATE; 
        :NEW.CREADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
    END IF; 
    :NEW.ACTUALIZADO := SYSDATE; 
    :NEW.ACTUALIZADO_POR := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER); 
END TRG_BIU_SUCURSAL; 

/
ALTER TRIGGER  "TRG_BIU_SUCURSAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_SUCURSAL" 
BEFORE UPDATE ON SUCURSAL 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'SUCURSAL', :OLD.IDSUCURSAL, 'SUCURSAL', :OLD.SUCURSAL, :NEW.SUCURSAL); 
 
END TRG_BUR_SUCURSAL; 

/
ALTER TRIGGER  "TRG_BUR_SUCURSAL" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BDR_USUARIO" 
BEFORE DELETE ON USUARIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDEMPLEADO', :OLD.IDEMPLEADO,  NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDSUCURSAL', :OLD.USUARIO, NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'USUARIO', :OLD.USUARIO,  NULL, 'VALOR ELIMINADO'); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO, OBSERVACIONES) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'PW', :OLD.PW, NULL, 'VALOR ELIMINADO'); 
END TRG_BDR_USUARIO; 

/
ALTER TRIGGER  "TRG_BDR_USUARIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BIR_USUARIO" 
BEFORE INSERT ON USUARIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW  
BEGIN 
  <<COLUMN_SEQUENCES_IDPROMO>> 
  BEGIN 
    IF INSERTING AND :NEW.IDUSUARIO IS NULL THEN 
      SELECT SEQ_IDUSUARIO.NEXTVAL INTO :NEW.IDUSUARIO FROM SYS.DUAL; 
    END IF; 
  END COLUMN_SEQUENCES; 
END TRG_BIR_USUARIO; 

/
ALTER TRIGGER  "TRG_BIR_USUARIO" ENABLE
/
CREATE OR REPLACE NONEDITIONABLE TRIGGER  "TRG_BUR_USUARIO" 
BEFORE UPDATE ON USUARIO 
REFERENCING OLD AS OLD 
NEW AS NEW 
FOR EACH ROW 
BEGIN 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDEMPLEADO', :OLD.IDEMPLEADO, :NEW.IDEMPLEADO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDSUCURSAL', :OLD.IDSUCURSAL, :NEW.IDSUCURSAL); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'USUARIO', :OLD.USUARIO, :NEW.USUARIO); 
	INSERT INTO BITACORA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO) 
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'PW', :OLD.PW, :NEW.PW);	 
END TRG_BUR_USUARIO; 

/
ALTER TRIGGER  "TRG_BUR_USUARIO" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRG_BIR_DIRECCION" 
BEFORE INSERT ON DIRECCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDDIRECCION>>
  BEGIN
    IF INSERTING AND :NEW.IDDIRECCIONIS NULL THEN
      SELECT SEQ_IDDIRECCION.NEXTVAL INTO :NEW.IDDIRECCIONFROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_DIRECCION;

/
ALTER TRIGGER  "TRG_BIR_DIRECCION" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRG_BIR_DIRECCION_" 
BEFORE INSERT ON DIRECCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDDIRECCION>>
  BEGIN
    IF INSERTING AND :NEW.IDDIRECCIONIS NULL THEN
      SELECT SEQ_IDDIRECCION.NEXTVAL INTO :NEW.IDDIRECCIONFROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_DIRECCION_;

/
ALTER TRIGGER  "TRG_BIR_DIRECCION_" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRG_BIR_IDDIRECCION" 
BEFORE INSERT ON DIRECCION
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES_IDDIRECCION>>
  BEGIN
    IF INSERTING AND :NEW.IDDIRECCION IS NULL THEN
      SELECT SEQ_IDDIRECCION.NEXTVAL INTO :NEW.IDDIRECCION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END TRG_BIR_IDDIRECCION;

/
ALTER TRIGGER  "TRG_BIR_IDDIRECCION" ENABLE
/
